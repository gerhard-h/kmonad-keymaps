#|
;; FEATURES kanata                                       QMK                                              QMK minimal portable requirements
;; - Home row mods                                       (Y) but timing problems                          Fallback abc layer (Fallback = no kanata available)
;; - Autosymbol: Tap_Hold                                 y TAP_HOLD / MOD_TAP
;; -(Autosymbol: NO Dbl_Tap_Hold on Shift)                n also timing issues
;; -(Autosymbol: Dbl_Tap_Hold ONLY for SLOW KEYS q,.)     Y for all non modifiers
;; - Autosymbol: Dbl_Tap_Hold on non Shift modifiers      N                                                Fallback abc layer may (not) have this anyway
;; -(Autosymbol: Dbl_Tap slowes Tap_Hold)				  Y no problem for non modifirers
;; - Autosymbol: Long_Hold                                N                                               *Default Querty kanata layer
;; - Symbol layer (rarly used space + caps)               y                                                Fallback Symbol layer
;; - V-key Symbol layer (more used)                      (y) is possible  but maybe not needed             Fallback Symbol layer
;; - Nav/Number layer                                     y + sticky + dedicated layerkey                  Fallback number/nav layer
;; - one-shot layer (rarly used)                          y                                                On Fallback layers
;; - one-shot shift,                                      y                                                On Fallback layer
;; - alt tap otimization                                  inprogress
;; - F23 to Ahk Mouse layer								  y even better also with ahk highlight           *Mouse Layer
;; - F24 to Ahk hotkeys									  y
;; - leaderkey, wincompose and ahk integration           (y) no leaderkey but integrations still work
;; - AHK hotstring special version                        y AHK hotstring
;; - extra thumbkeys can be supported (F13+)              extra thumbkeys can be handeled directly (mouse)
;; - F-Keys as normal                                     F-Key layer                                     *F-Key layer 
;; - bspc on ö											  - on ö or - on , _on =
;; - rdesktop alt-pgup controls not mappable              pgup can be remapped
;;
;; layers(6): normal,
;;            fallback normal,
;;            fallback symbol
;;            fallback number/nav
;;            mouse,
;;            F-key 
;; Long Hold  might be anoying
;; RETRY via newest version and skip fallback:  ctl win alt mouse F13 space F14 LFKey left down right
;;     space/numbers 
;; TODO wich thumb activates nav? cursor keys seems to be used with right tumb
;; BUG SC06F remap altgr to f24 in sharpkeys is not recognized by kanata
;; if numtab is good make a key to flip remote desktop controls -> dont work bc of timings non remappable keys -> TODO retry wintercept
;; double leader keying (multi f24 sldr) inconsistencies with sldr 
;; TODO sldr key not used
;; TODO tap hold AltGr to f24 / AltGr and remove wincompose - AltGr is a bad positionend key anyway
;; TODO test release-key | release-layer key release not always working
;; TODO where to put delete (´)? nav+B rshift
;; TODO (multi lrld f9) is not working lets try makro in next release
;; INFO rpt just rpeats one key
;; TODO revisit win and esc otimization and rsft _ vs rsft esc  
;; TODO ctrl + Z single key ?
;; INFO @tab esc key feels bad

   INFO tap-dance-eager https://github.com/jtroo/kanata/issues/241 does not make a big difference

   TIP dynamic macro support https://github.com/jtroo/kanata/issues/221
   TIP allow multiple sequence leaders, which can have different sequences with the same characters but different outputs
   ```
   (defalias
     ald (multi sldr (macro 1 a))
     bld (multi sldr (macro 1 b))
   )
   
   (defseq
     fake_key_a  (a c)
     fake_key_b  (b c)
   )
   ```
   This configuration would allow @ald followed by c and @bld followed by c to have different behaviour.
   
   TIP implement kombo while hiding sldr behind a normal key
   (deflayer default  grv  1    2    @s3  4    5    )
   (defalias three 3 )
   (deffakekeys
     fake_key_3 (macro o k a y S-1)
     fake_key_5 (macro o k a y S-1)
   )
   
   (defalias
     3ld (multi sldr (macro 1 @three))
     s3 (tap-hold 150 150 @three @3ld)
   )
   
   (defseq
     fake_key_3  (3 4)
     fake_key_5  (3 5)
   )
   This does work, few issues though i) 3 loses key repeat, and ii) since it is leader style action, I cannot repeat it, for e.g. 3 & 4 without releasing 3 going for 5, will not trigger 3 & 5
   
   TIP If you want instant activation on a tap-hold you could try do something like: (multi (macro a) (tap-hold 100 100 xx b))
   
   BUG one shot queueing seems to break after some time - like reloading ahk
   
   BUG AltGr + I = ahk menu seems to hang CTRL - SOLVED by excluding AltGr (and Ctrls) from defsrc 	 
  
  ;; Swap numbers and their symbols with respect to shift
  (defoverrides
  (1) (lsft 1)
  (2) (lsft 2)
  ;; repeat for all remaining numbers

  (lsft 1) (1)
  (lsft 2) (2)
  ;; repeat for all remaining numbers
  ) 
  TODO maybe combine chord with ß

  TEST 'mouse'  click with inception
  TEST Added: ensure all keys are released at the end of a dynamic macro
  
   todo nav + ,.- = mouse..,mouse..,mouse..

   ist unötig 
   todo lspace + rspace = enter but AltGr = enter (or backspace?)
   todo del und - position
	
  
;; CTRL + SPACE + ESC => Exit KANATA immediatly
|#
(defcfg
   sequence-timeout 3000
  ;; windows-interception-mouse-hwid "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"
  ;; windows-altgr cancel-lctl-press ;; remove the lctl press that comes as a combo with ralt  with F24 mapping
  ;; windows-altgr add-lctl-release  ;; add an lctl release when ralt is released           with standard Altgr 
  ;; windows don't map altgr to avoid both options from above 
  ;; NOTE: even with these workarounds, putting lctl+ralt in your defsrc may
  ;; not work too well with other applications that use WH_KEYBOARD_LL.
  ;; Known applications with issues: GWSL/VcXsrv

  ;; Using a binary compiled with the cmd feature enabled, uncomment below to
  ;; enable command execution:
  danger-enable-cmd yes
  ;; are there usecases? for cmd
  ;; process-unmapped-keys no ;; yes does not help with japanese keys ; flipped to no may help with RDP
  process-unmapped-keys no
  ;; Intl1 KEY_RO ro
  ;; CHANGES Removed onshot-mods and ctrl-keys to make Remotedesktop not stick ctl 
)
(deflocalkeys-wintercept
  -    191
  ü    219
  +    221
  #    220
  ö    186
  ß    189
  ^    192
  ´    187
  ä    222
  <    226
)
(defalias
  ;; shifted german keys
  ! (macro S-1 )
  ˝ (macro S-2 )  ;; ˝ look-a-like is used because @" is no valid alias, to be displayed correctly in console requires a font that can - e.g. cascadia
  §	(macro S-3 )
  $	(macro S-4 )
  %	(macro S-5 )
  &	(macro S-6 )
  /	(macro S-7 )
  ﴾	(macro S-8 )  ;; ﴾ look-a-like is used because @( is no valid alias, to be displayed correctly in console requires a font that can - e.g. cascadia
  ﴿	(macro S-9 )  ;; ﴿ look-a-like is used because @) is no valid alias, to be displayed correctly in console requires a font that can - e.g. cascadia
  =	(macro S-0 )
  ? (macro S-ß )
  * (macro S-] )
  .* S-]
  ' (macro S-\ )
  ; (macro S-, )
  : (macro S-. )
  _ (macro S-/ )
  > (macro S-102d )
  < (macro 102d  ) ;; not really needed but having @< and @> looks consistent
  + (macro ] )
  .+ ] 
  ;; change dead keys in normal keys
  ´ (macro = spc)	  ;; ´ 
  ` (unicode `)  ;; `
  ^ (unicode ^)       ;; ^ = \ - shifting @^ will produce an incorrect space now
  ° S-grv
  
  ;; AltGr german keys
  ~ (macro RA-] )
  \\ RA-ß 
  \ (unicode \);;(macro RA-ß )
  ẞ (macro RA-S-ß )
  | (macro RA-102d )
  } (macro RA-0 )
  { (macro RA-7 )
  ] (macro RA-9 )
  [ (macro RA-8 )
  € (macro RA-e )
  @ (unicode @ )
  ² (macro RA-2 )
  ³ (macro RA-3 )
  µ (macro RA-m )
  , (macro ,)
  
  f20 (macro f20)
  f19 (macro f19)
  ä (macro ')
  ü (macro [)
  ö (macro ;) 
  # \
  ß -
)

;; defsrc for iso german qwertz layout  
;; If you are looking for other keys, the file src/keys/mod.rs should hopefully provide some insight.
;; z and y are not flipped positioning has no meaning but must be consistent with other layers
(defsrc
  esc       f1   f13   f14 f24
  ^         1    2    3    4    5    6    7    8    9    0    -    ´    bspc
  tab       j    l    u    a    y    w    b    d    g    z    q    +    #
  caps      c    r    i    e    o    m    n    t    s    h    ß    ret
  lsft      v    x    ü    ä    ö    p    f    ,    .    k    rsft
            lmet lalt           spc                           
)
(deflayer base
;;  @ech
  esc       f1   @ff13   @ff14 f24
  @^ec      @1@  @2   @3`  @4   @5   @6   @7   @8   @9   @0   -    del  bspc
  @tab      @j!  @g˝  @u﴾  @a﴿  @z$  @w&  @b%  @d?  @l#  @v\  @q@  +    @rtw
  @atx      @cwn @r@  @i[  @e]  @o'  @m/  @n%  @tC  @s#  @h-  @ßwn @rtc
  @oss      @y`  @x|  @ü{  @ä}  @ö+  @p=  @f*  @,;< @.:> @k_~ @rsf
            lmet lalt          (tap-hold  200 200 spc (fork @num @sym (rsft lsft)))
;;          @oml @oal           @nav                           
)
(deflayer numbers
  esc       f1   @ff13   bspc f24
  @^        @at1  @at2 @at3 @at4 @at5 @at6 @at7 @at8  @at9 @atm lrld-next A-prtsc _
  _         @-_:  1    2    3  C-bspc esc  home up    end  pgup pgdn      _       _
  @sy1      @.wn  @al4 @ct5 @sf6 0    bspc left down  rght bspc @fky      _
  _         @,:   7    8    9    del  ret  @stb @cde  @alc @mrc _
            _     _              _                  
)
(deflayer numberstab
  esc       f1   @ff13   @ff14 f24
  ^         1    2    3    4    5    6    7    8    9    0    -    ´    bspc
  _         @-_:  1    2    3  C-bspc esc home up   end  pgup pgdn      _       _
  @sy1      left rght left rght 0    bspc left down rght bspc @fky      _
  _         @,:   7    8    9    del  ret  @stb @cde  @alc @mrc _
            _     _              _                        
)
  ;; Exit numfix with CAPS or HOLD SPACE or 7+9
(deflayer numfix
  esc       f1   @ff13   (tap-hold  200 200 spc @que) f24
  @^        @at1  @at2 @at3 @at4 @at5 @at6 @at7 @at8  @at9 @atm lrld-next A-prtsc _
  _         @-_:  1    2    3  C-bspc esc  home up    end  pgup pgdn      _       _
  @que      @.wn  @al4 @ct5 @sf6 0    bspc left down  rght bspc @fky      _
  _         @,:   @ch7 8    @ch9 del  ret  @stb @cde  @alc @mrc _
            _     _              (tap-hold  200 200 spc @que)                  
)
(deflayer symbols
  _         f1   @ff13   @ff14 f24
  _         _    _    _    _    _    _    _    _    _    @atm lrld-next A-prtsc _
  _         @!   @˝   @﴾   @﴿   @$   @&   @{   @?   @}   @\   @@    _    _         
  @numfix   @`   @-_: @[   @]   @'   @/   @%   @-_~ #    @_   -     _          
  _         @@   @|   @{   @}   @+   @=   @*   @<   @>   @~   _               
            _    _              ret
)
(deflayer vsymbols
  _         f1   @ff13   @ff14 f24
  _         _    _    _    _    _    _    _    _    _    _    _    _    _   
  _  (unicode Ù) @˝   @﴾   @﴿   @$   @&   @{   @?   @}   @\   _    _    _         
  _  (unicode Õ) @@   @[   @]   @'   @/   @%   @-_~ @#   @-_~ -    _          
  _         @`   @|   @{   @}   @+   @=   @*   @<   @>   @~   _               
            _    _              _
)
(deflayer ksymbols
  _         f1   @ff13   @ff14 f24
  _         @fashing @geb @iban  @plz _    _    _    _    _    _    _    _    _
  _         @cmdde   @˝   @﴾     @﴿   @tsc @&   @{   @?   @}   @\   _    _    _         
  _         @cmdiso  @@   @[     @]   @'   @/   @%   @^   #    @-_~ _    _          
  _         @`       @|   @{     @}   @+   @=   @*   @<   @>   @~   _               
            _        _                _ 
)
(deflayer fkeys
  esc       f1   @ff13   @ff14 f24
  @^ec      @1@  @2   @3`  @4   @5   @6   @7   @8    @9   @0   @sz  sldr bspc
  _         @-_: f1   f2   f3   f10  esc  home up    end  pgup pgdn _    _    
  @sy1      @.wn f4   f5   f6   f11  lmet lsft lctl  lalt lmet _    _ 
  _         @,   f7   f8   f9   f12  ret  @stb @cde  @alc @mrc _
       _    _               _             
)
(deflayer mouse
  esc       f1   @ff13   @ff14 f24
  ^         1    2    3    4    5    6    7    8    9    0    -    ´    bspc
  tab       XX   @slw @slw @slw XX  @quep @cll @ma↑ @clr z    q    +    #
  caps      XX   @clm @clr @cll XX   h    @ma← @ma↓ @ma→ h    ß    ret
  lsft      @msz lalt lctl lsft XX   @ms← @ms↑ @ms↓ @ms→ k    rsft
            lmet lalt           @quep                           
)
(deflayer mouseslow
  esc       f1   @ff13   @ff14 f24
  ^         1    2    3    4    5    6    7    8    9    0    -    ´    bspc
  tab       XX   @slw @slw @slw XX  @quep @cll @ms↑ @clr z    q    +    #
  caps      XX   @clm @clr @cll XX   h    @ms← @ms↓ @ms→ h    ß    ret
  lsft      @msz lalt lctl lsft XX   @ms← @ms↑ @ms↓ @ms→ k    rsft
            lmet lalt           @quep
)
(defalias
  chi (chord example d)
  cho (chord example l)
  chf (chord fk f)
  ch, (chord fk ,)
  ch. (chord fk .)
  chx (chord xä x)
  chä (chord xä ä)
  ch7 (chord exit79 7)
  ch9 (chord exit79 9)
)
(defchords exit79 300
  (7      ) 7
  (   9   ) 9
  (7  9   ) @que
)
(defchords xä 300
  (x      ) x
  (   ä   ) ä
  (x  ä   ) @numfix
)
(defchords example 300
  (d      ) d
  (   l   ) l
  (d  l   ) f18    ;;(multi f18 sldr) trigger ahk string replace
)
(defchords fk 140
  (f       ) f
  (   ,    ) ,
  (f  ,    ) f24
  (      . ) .
  (   ,  . ) k
)
;; mouse layer
(defalias
  mal M-C-A-f
  mar M-C-A-d
  mam M-C-A-s
  que (layer-switch base)
  numfix (layer-switch numfix)
  quep (multi @que  A-C-M-p)
  mus (layer-switch mouse)
  slw (layer-toggle mouseslow)
  
  ms↑ (movemouse-up 3 1)
  ms← (movemouse-left 3 1)
  ms↓ (movemouse-down 3 1)
  ms→ (movemouse-right 3 1)

  ma↑ (movemouse-accel-up 1 1000 1 5)
  ma← (movemouse-accel-left 1 1000 1 5)
  ma↓ (movemouse-accel-down 1 1000 1 5)
  ma→ (movemouse-accel-right 1 1000 1 5)
  
  cll (multi @que @mal A-C-M-p)
  clr (multi @que @mar A-C-M-p)
  clm (multi @que @mam A-C-M-p)
  
  
  ;; F23 (tap-hold 200 200 y (multi f24 sldr))  ;; works technically f24 triggers y itselft it must be hold for f24 ... feels bad
  yms (tap-hold-release 200 200 z (multi @mus A-C-M-p) )
  msz (multi @que (macro z))
  msu (multi @que (macro u))
  mso (multi @que (macro o))
;;  msf (multi @que (macro mltp A-C-p))
 ;; msf (macro mlft 10 f17 100 lrld)
  msf (multi mlft f17  lrld)
  msd (multi @que (macro d))
  mss (multi @que (macro s))
  ;;Double Click is missing
  
)

(defalias  
  ;; switch-layer also possible for stickyness
  num (layer-toggle numbers)
  numtab (layer-toggle numberstab)
  sym (layer-toggle symbols)
  syv (one-shot 2000 (layer-toggle vsymbols))
  syvv (layer-toggle vsymbols)
  sy1 (one-shot 2000 (layer-toggle symbols))
  syk (layer-toggle ksymbols)
  fky (layer-toggle fkeys)
  ff14 (tap-hold  200 200 spc (layer-toggle symbols))
  ;;ff13 (one-shot 500 (layer-toggle ksymbols))
  ff13 (layer-toggle ksymbols)
  
  ;; one shot modifiers
  oss (one-shot 2000 lsft)
  ocl (one-shot 2000 lctl) 
  oal (one-shot 2000 lalt)
  oml (one-shot 2000 lmet)
  
  ;; modifiers for numpad
  stb (tap-hold-release 200 5000 tab lsft)
  cde (tap-hold-release 200 5000 (multi @mus A-C-M-p) lctl) ;; (multi @mus (macro f23)) lctl) to trigger ahk mouse
  alc (tap-hold-release 200 5000 @mal lalt)
  mrc (tap-hold-release 200 5000 @mar lmet)

  ;; outer/special keys
  ech (tap-hold 140 400 esc (multi (macro home ) (tap-hold 400 900 XX (macro end ) )) )
  ^ec  (tap-hold 200 300 esc (macro grv spc))
  tab (tap-hold-press  200 400 tab lctl )
;;rtc (tap-hold-release 200 340 (multi ret sldr) lmet) this makes ret not appear
  rtc (tap-hold-release 200 5000 ret lctl)
  rtw (tap-hold-release 200 5000 ret lmet)
  rsd (tap-hold-release 200 240 @syv (multi rsft lsft)) ;; TODO not used ?! BUG rsft get ignored on RDesktop -> use lsft  or (multi rsft lsft) ?
  ;; DBL-tap-Hold is not realy good for the frequently used symbol layer
  ;; nav (tap-dance 120 ((tap-hold  140 140 spc @num) (tap-hold  140 140 spc @sym) spc spc spc))
  ;; nav (tap-hold  200 200 (multi spc sldr) @num) works but would require awkward sequneces
  nav (tap-hold  200 200 spc @num)
  ral S-C-M-A-9 ;; release ALL key (BUG) kanata cannot release stuck keys from ahk (both tools with elevated rights) PRESS F24 FOR RELEASE ALL MODS
  ;;rcl (tap-hold-release 200 200 sldr rctl) ;; !! sldr is hard coded leader key fake key  !! dropped in favor of ocl
  
  dr0 (dynamic-macro-record 0)
  dr1 (dynamic-macro-record 1)
  dr2 (dynamic-macro-record 2)
  dp0 (dynamic-macro-play 0)
  dp1 (dynamic-macro-play 1)
  dp2 (dynamic-macro-play 2)
  dms dynamic-macro-record-stop
  
  ;; alt tab - never use this
  at1 (multi lalt tab)
  at2 (multi lalt tab tab)
  at3 (multi lalt tab tab tab)
  at4 (multi lalt tab tab tab tab)
  at5 (multi lalt tab tab tab tab tab)
  at6 (multi lalt tab tab tab tab tab tab)
  at7 (multi lalt tab tab tab tab tab tab tab)
  at8 (multi lalt tab tab tab tab tab tab tab tab)
  at9 (multi lalt tab tab tab tab tab tab tab tab tab)
  ;;at0 (tap-dance 500 (A-tab (macro f24 r) (macro f24 t) (macro f24 z)) ) old verion of atm
  aty (multi @numtab lalt (macro tab) ) ;; alt tab by dbl_tap-hold k
  atx (tap-hold 200 150 (multi lalt tab) (multi @numtab lalt (macro tab tab)) ) ;; alt tab by hold caps
  ;;atm (tap-dance 700 (@at1 @at2 @at3 @at4) ) Sequence now works but is inferior to the number row mapping
  atm  (tap-dance 500 ( A-tab (macro A-(tab 90 tab )) (macro A-(tab 90 tab  90 tab )) (macro A-(tab 90 tab  90 tab  90 tab )) ))
  ;; not working on remote desktop atp  (tap-dance 500 ( (macro A-pgup) (macro A-(pgup 90 pgup )) (macro A-(pgup 90 pgup  90 pgup )) (macro A-(pgup 90 pgup  90 pgup  90 pgup )) ))

  ;; *** HOME ROW MODS ***
  e]  (tap-hold-release 1 140 e lsft)  ;;(multi lsft (layer-while-held smodded) )) ;;  INFO timing of 1 avoids keyrepeat
  n%  (tap-hold-release 1 140 n rsft ) ;;(multi rsft lsft)) ;; this clean form avoids US -> Ujs bug when typing fast ;; BUG rsft has bugs on RDesktop multi fixes fjf->F but jfj->j stays
  i[  (tap-dance 180 ((tap-hold-release 350 600 (macro i) lctl ) (tap-hold 200 300 (macro i i) (multi (macro RA-8 ) (tap-hold 200 700 XX (macro RA-9 ))))))
  tC  (tap-dance 140 ((tap-hold-release 200 400 t lctl ) (tap-hold 200 300 (macro t t) (macro -) ))) 
  ;;tC (tap-hold-release 180 900 t (multi lctl (layer-while-held cmodded)) )
  ;;tC  @chk
  ;; TODO test if Long_Tap_O or Dbl_Tap_Hold_L is used in practiser
  ;;s# (tap-dance 140 ((tap-hold-release 200 400 @chl alt) (tap-hold 200 400 (macro s s) (macro @# ) )))
  s# (tap-hold-release 250 900 s alt)
  ;;s# @chl
  ßwn (tap-hold-release 350 5000 ß lmet)
  h-  (tap-hold 1 180 h (macro - ) )                                                                               ;; ß = [
  cwn (tap-hold-release 400 5000 c lmet)
  r@ (tap-hold-release 350 5000 r lalt)
  rsf (tap-hold-release 350 500 - rsft)
  ;; number layer home row mods
  sf6 (tap-hold-release 200 300 6 lsft)
  ct5 (tap-hold-release 200 300 5 lctl)
  al4 (tap-hold-release 200 340 4 lalt)
  .wn (tap-hold-release 200 240 . lmet)
  wn0 (tap-hold-release 200 340 0 lmet)  ;; unused because of Win+G gets triggered
  9sy (tap-hold-release 200 340 9 @syv)  ;; unused because v is already mapped to do this
  ;;ght (tap-hold-release 200 240 rght rmet)  ;;works but not used
  n1 1
  n2 2
  n3 3
  n4 4 
  n5 5 
  n6 6 
  n7 7 
  n8 8 
  n9 9 
  n0 0
  1@ (tap-hold 140 140 1 (multi (macro S-1 ) (tap-hold 200 400 XX (macro bspc @@ ))) )  
  2 (tap-hold 140 300 2 (multi @˝ (tap-hold 200 700 XX @˝ )) )
  ;; multi 3 3 because macro 3 3 is not working
  3` (tap-dance 140 ((tap-hold 10 100 3 (multi @` (tap-hold 200 400 XX (macro S-= S-=))  ))  (tap-hold 10 100 (multi 3 3) (macro S-= S-= S-= spc))))
  4 (tap-hold 200 500 4 (macro S-4 ))
  5 (tap-hold 200 500 5 (macro S-5 ))
  6 (tap-hold 200 500 6 (macro S-6 )) ;;(tap-hold 200 300 6 (multi (macro S-6 ) (tap-hold 200 400 XX (macro S-6 ))))
  7 (tap-hold 200 500 7 (macro S-7 )) ;;(tap-hold 200 300 7 (multi (macro S-7 ) (tap-hold 200 400 XX (macro S-7 ))))
  8 (tap-hold 200 500 8 (macro S-8 )) ;;(tap-hold 200 300 8 (multi (macro S-8 ) (tap-hold 200 400 XX (macro bspc RA-8 ))) )
  9 (tap-hold 200 500 9 (macro S-9 )) ;;(tap-hold 200 300 9 (multi (macro S-9 ) (tap-hold 200 400 XX (macro bspc RA-9 ))) )
  0 0 ;;(tap-hold 10 100 0 (multi (macro S-0 ) (tap-hold 200 400 XX (multi (macro S-0 ) (tap-hold 200 400 XX (macro S-0 ))  ))  ) )
  sz (tap-hold 200 300 ß (multi (macro S-ß ) (tap-hold 200 500 XX (macro bspc RA-ß ))))
  ;; q (multi q sldr) eats the next key after q
  ;;q! (tap-hold 140 140 q (multi (macro S-1 ) (tap-hold 200 400 XX (macro bspc RA-q ))) )                 ;; q ! @
  ;;q! (tap-hold 1 140 q (macro-release-cancel S-1 600 bspc (unicode @) 800 bspc S-1 800 bspc))                   ;; q ! @
  ;;q! (tap-dance 120 ((tap-hold 1 90 q (multi (macro S-1 ) (tap-hold 200 600 XX (macro bspc (unicode @) ))) )  (unicode @)  (unicode ä) ) )
  j! (tap-hold 1 100 (tap-dance-eager 150 (j (fork (macro bspc @@) RA-q (lctl rctl)) )) (multi @! (tap-hold 200 600 XX (macro bspc @@ )))  ) ;; q ! @    Great! tapdance can be nested inside tap-hold. Still timing problems on keybr.com!
  g˝ (tap-hold 140 140 g (multi (macro S-2 ) (tap-hold 200 400 XX (macro S-2 ))) )                         ;; " ""
  u﴾  (tap-hold 1 150 u (multi (macro S-8 ) (tap-hold 200 400 XX (macro S-9 ))))                           ;; (  ()
  a﴿  (tap-hold 140 140 a (fork (macro-release-cancel S-9 600 bspc RA-9 ) C-a (lctl rctl)) )                   ;; ) [ todo find a better use 
  z$  (tap-hold 140 140 y (macro S-4))                                                                      ;; $
  w&  (tap-hold 140 140 w (multi (macro S-6 ) (tap-hold 200 800 XX (macro S-6 ))))                          ;; & &&
  d?  (tap-hold 140 140 @chi (multi @? (tap-hold 200 500 XX @? )))                                           ;; ? = S-[      i ? ??
  ;;p\  (tap-dance 140 ((tap-hold 10 100 p (multi  @\ (tap-hold 200 800 XX  @\ )))  (macro p p) ))  ;; p \ \\ TODO tapdance over tap-hold why?
  v\  (tap-hold 140 140 (macro v) (multi @\ (tap-hold 200 800 XX @\ )) ) ;; p \ \\ 
  aä  (tap-hold 1 120 a (macro-release-cancel ä 400 bspc S-= spc 600 bspc ä 600 bspc a 600 bspc))            ;; ä = '  `=S-]
  b%  (tap-hold 1 140 b  (macro S-5 ))
  l#  (tap-hold 1 140 @cho (macro # ))
  sß  (tap-hold 1 120 s (macro ß ) )                                                                               ;; ß = [
  q@  (tap-hold 140 140 q @@ ) 
  o'  (tap-hold 140 140 o (multi @' (tap-hold 200 800 XX @' )) )                         ;; ' ''
  m/  (tap-hold 140 140 (macro m) (multi (macro S-7 ) (tap-hold 200 800 XX (macro S-7 ))) )                 ;; / // TODO do we wont dbl_tap-hold keyrepeat
  x|  (tap-hold 140 140 @chx (multi (macro RA-102d ) (tap-hold 200 800 XX (macro RA-102d ))) )               ;; | ||
  y`  (tap-hold 140 140 z (multi @` (tap-hold 200 800 XX @´ )) )
  ü{  (tap-hold 140 140 ü (multi (macro RA-7 ) (tap-hold 200 500 XX (macro RA-0 ))))                      ;; { {}
  ;;ä}  (tap-hold-release-timeout 200 400 ä @syvv @} ) ;; not needed on v20 bc of second space bar
  ä}  (tap-hold 140 140 @chä @} )
  ö+  (tap-hold 140 140 ö (multi (macro @.+ ) (tap-hold 200 500 XX (macro @.+ ))))                              ;; + = =  b + ++
  p=  (tap-hold 140 140 p (multi (macro S-0 ) (tap-hold 200 400 XX (multi (macro S-0 ) (tap-hold 200 400 XX (macro S-0 ))  ))) ) ;; n = == === 
  f*  (tap-hold 140 140 @chf (multi S-] (tap-hold 500 900 XX S-] )))                      ;; * = S-= with long autorepeat
;;,F24 (tap-dance 140 ((tap-hold 10 100 , (multi (macro S-, ) (tap-hold 200 400 XX (macro bspc @lth ))) )  (tap-hold 10 100 f20 (macro @lth))))  ;; ,, = F24 , ; <
;; .:> (tap-dance 140 ((tap-hold 10 100 . (multi (macro S-. ) (tap-hold 200 400 XX (macro bspc @gth ))) )  (tap-hold 10 100 (macro . .) (macro @gth)) (tap-hold 10 100 (macro . . .) .) ))  ;; . : >
;;  -_~ (tap-dance 140 ((tap-hold 10 100 - (multi (macro S-- ) (tap-hold 200 400 XX (macro bspc @til ))) )  (tap-hold 10 100 (macro - -) (macro @til)) (tap-hold 10 100 (macro - - -) -) ))  ;; - _ ~
;; nesting of tap-dance inside tap-hold is now possible
  ,F20 (tap-hold  10 100 (tap-dance 140 (, (tap-hold 10 100 f20 @<)))  (multi @;  (tap-hold 200 400 XX (macro bspc 102d ))) )  ;; ,, = F24 , ; <
  ,F18 (tap-hold  10 100 (tap-dance 140 ( f18  (tap-hold 100 100 (macro , ,) @<) (macro , , ,) ))  (multi @;  (tap-hold 200 400 XX (macro bspc 102d ))) )  ;; ,, = F24 , ; <
  ,;<  (tap-hold  10 100 (tap-dance 140 (@ch, (tap-hold 10 100 (macro , ,)  @< ) (tap-hold 10 100 (macro , , ,) .) )) (multi @; (tap-hold 200 800 XX (macro bspc 102d ))) ) 
  .:>  (tap-hold  10 100 (tap-dance 140 (@ch. (tap-hold 10 100 (macro . .)  @> ) (tap-hold 10 100 (macro . . .) .) )) (multi @: (tap-hold 200 800 XX (macro bspc S-102d ))) )    ;; . : >
  -_~  (tap-hold  10 100 (tap-dance 140 (/   (tap-hold 10 100 (macro / /)  @~) (tap-hold 10 100 (macro / / /) /) )) (multi (macro S-/ ) (tap-hold 200 800 XX (macro bspc RA-] ))) )  ;; - _ ~
  -_:  (tap-hold  10 100 (tap-dance 140 (/   (tap-hold 10 100 (macro / /)  @:) (tap-hold 10 100 (macro / / /) /) )) (multi (macro S-/ ) (tap-hold 200 800 XX (macro bspc S-. ))) )  ;; - _ :
  k_~  (tap-hold 140 140 (tap-dance 120 (k   (tap-hold 10 100 (macro k k)  @~) (tap-hold 10 100 (macro k k k) k) )) (multi (macro S-/ ) (tap-hold 200 800 XX (macro bspc RA-] ))) )  ;; - _ ~
  ,:   (tap-hold   1 600 , @: )
  
  ;;f1 (macro f1 f24)  ;; only usefull in applications that do not react on F1 ==> not usefull
)


(defalias  
 fashing (macro @n1 @n1 . @n1 @n1 . @n2 @n0 @n2 @n3 )
 geb (macro @n2 @n1 . @n1 @n2 . @n2 @n0 @n0 @n1 )
 iban (macro S-d  S-e  @n3 @n0 @n7 @n0 @n0 @n2 @n0 @n2 @n7 @n0 @n0 @n0 @n4 @n5 @n5 @n0 @n6 @n8 @n6 @n0 )
 plz (macro @n6 @n4 @n7 @n1 @n1 )
 tsc (macro @\\ @\\ t s c l i e n t @\\ c @\\ d a t a )
 esp (macro S-. d a t e)
 ;; Last lines  of script no leading spaces
psiso (cmd-output-keys powershell.exe -NoProfile -NoLogo -NonInteractiv -Command "echo '(' ((Get-Date -Format 'yyyy-MM-dd').toCharArray() -join ' ') ')'") 
;;cmdiso (cmd-output-keys cmd.exe /C timek.cmd) 
cmdiso (cmd "C:\Program Files\AutoHotkey\AutoHotkeyU64_UIA.exe" "isodate.ahk")
cmdde (cmd-output-keys cmd.exe /C timedek.cmd) 
;; bash might be on windows an is much faster than wsl or powershell 
;;bashiso (cmd-output-keys bash -c "date +'%F %R' | sed 's/./& /g' | sed 's/:/S-;/g' | sed 's/\(.\{20\}\)\(.*\)/\(\1 spc \2\)/'")
dayiso (macro @n2 @n0 @n2 @n3 - @n0 @n3 - @n0 @n6   )
dayde  (macro @n0 @n6 . @n0 @n3 . @n2 @n0 @n2 @n3  ))