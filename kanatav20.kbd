;; Problems with home row mods (examples asume QUERTY and shifting with index fingers)
;; P1 unwanted mod activation 
;; P2 shifted rolls [ER instead of Er] (human not fast enought to release shift in time) 
;; P3 shift finger overload [fof or fo instead of Of] (human releases shift to early to speed up the follow up f) 

;; Solution (status)
;; P1 solved by typing layer and by higher hold-timeouts for non shift modifiers
;; P2 solved by typing layer (if you want or not) 
;; P3 only solved for FJ - other cases require learning the correct timeing

;; timeings should work fine for 40 to 80 words per minute; if you are slower or new to home row mods increasing them might help in getting started   
(defcfg
   chords-v2-min-idle 170
   process-unmapped-keys yes
   ;;yes does not help with japanese keys ; did not help with RDP sticky keys; 
   ;;needed for WINIOV2 and WIN to have mouse modifiers (naga)
   delegate-to-first-layer yes ;;INFO only for layer-switch; _ to reference to base layer seems correct (TODO simplyfy layers). has no effect on deflayermap.
   concurrent-tap-hold yes      ;;TODO now yes is working INFO getting early autosymbols if yes eg. Hold-U + Tap-, gives (; instead of (, same for ({ instead of (Ã¼ [TODO make a simulation to prove the problem.] problem has gone 1.7.1p 
   sequence-timeout 3000       ;; sequence not used
   sequence-input-mode visible-backspaced ;;hidden-suppressed ;; hidden-delay-type ;; BUG the hidden types sometimes have shift issues
   sequence-backtrack-modcancel no  ;; unknown
  ;; windows-interception-mouse-hwid "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"
  ;; windows-altgr cancel-lctl-press ;; remove the lctl press that comes as a combo with ralt  with F24 mapping
  ;; windows-altgr add-lctl-release  ;; add an lctl release when ralt is released           with standard Altgr 
  ;; HINT GH: on windows don't map altgr to avoid both options from above 
  ;; NOTE: even with these workarounds, putting lctl+ralt in your defsrc may
  ;; not work too well with other applications that use WH_KEYBOARD_LL.
  ;; Known applications with issues: GWSL/VcXsrv

  log-layer-changes  yes  ;; overhead vs info in console
  
  tray-icon "base.ico" ;; should activate for layers without icons 
  icon-match-layer-name   	yes  	;;|yes| match layer name to icon files even without an explicit (icon name.ico) config
  tooltip-layer-changes   	no  	;;|false|
  tooltip-show-blank    	no  	;;|no|
  tooltip-duration        	500  	;;|500|
  tooltip-size            	24,24	;;|24 24|
  notify-cfg-reload       	yes  	;;|yes|
  notify-cfg-reload-silent	yes   	;;|no|
  notify-error            	yes  	;;|yes|

  ;; Using a binary compiled with the cmd feature enabled - usecases: current date, NUMLOCK status
  danger-enable-cmd yes
  rapid-event-delay 5 ;; (5) This configuration applies to
  ;; a) the release of one-shot-press activation
  ;; b) the release of the tapped key in a tap-hold activation
  
  ;; hw Keychron V10 and K15 Pro (TODO missing laptop keyboard) - keyboard binding prevents layer influences on the mouse
  windows-interception-keyboard-hwids (
  "72, 0, 73, 0, 68, 0, 92, 0, 86, 0, 73, 0, 68, 0, 95, 0, 51, 0, 52, 0, 51, 0, 52, 0, 38, 0, 80, 0, 73, 0, 68, 0, 95, 0, 48, 0, 51, 0, 65, 0, 49, 0, 38, 0, 82, 0, 69, 0, 86, 0, 95, 0, 48, 0, 49, 0, 48, 0, 50, 0, 38, 0, 77, 0, 73, 0, 95, 0, 48, 0, 48, 0, 0, 0, 72, 0, 73, 0, 68, 0, 92, 0, 86, 0, 73, 0, 68, 0, 95, 0, 51, 0, 52, 0, 51, 0, 52, 0, 38, 0, 80, 0, 73, 0, 68, 0, 95, 0, 48, 0, 51, 0, 65, 0, 49, 0, 38, 0, 77, 0, 73, 0, 95, 0, 48, 0, 48, 0, 0, 0, 72, 0, 73, 0, 68, 0, 92, 0, 86, 0, 73, 0, 68, 0, 95, 0, 51, 0, 52, 0, 51, 0, 52, 0, 38, 0, 85, 0, 80, 0, 58, 0, 48, 0, 48, 0, 48, 0, 49, 0, 95, 0, 85, 0, 58, 0, 48, 0, 48, 0, 48, 0, 54, 0, 0, 0, 72, 0, 73, 0, 68, 0, 95, 0, 68, 0, 69, 0, 86, 0, 73, 0, 67, 0, 69, 0, 95, 0, 83, 0, 89, 0, 83, 0, 84, 0, 69, 0, 77, 0, 95, 0, 75, 0, 69, 0, 89, 0, 66, 0, 79, 0, 65, 0, 82, 0, 68, 0, 0, 0, 72, 0, 73, 0, 68, 0, 95, 0, 68, 0, 69, 0, 86, 0, 73, 0, 67, 0, 69, 0, 95, 0, 85, 0, 80, 0, 58, 0, 48, 0, 48, 0, 48, 0, 49, 0, 95, 0, 85, 0, 58, 0, 48, 0, 48, 0, 48, 0, 54, 0, 0, 0, 72, 0, 73, 0, 68, 0, 95, 0, 68, 0, 69, 0, 86, 0, 73, 0, 67, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"
  "72, 0, 73, 0, 68, 0, 92, 0, 86, 0, 73, 0, 68, 0, 95, 0, 51, 0, 52, 0, 51, 0, 52, 0, 38, 0, 80, 0, 73, 0, 68, 0, 95, 0, 48, 0, 50, 0, 70, 0, 57, 0, 38, 0, 82, 0, 69, 0, 86, 0, 95, 0, 48, 0, 49, 0, 48, 0, 49, 0, 38, 0, 77, 0, 73, 0, 95, 0, 48, 0, 48, 0, 0, 0, 72, 0, 73, 0, 68, 0, 92, 0, 86, 0, 73, 0, 68, 0, 95, 0, 51, 0, 52, 0, 51, 0, 52, 0, 38, 0, 80, 0, 73, 0, 68, 0, 95, 0, 48, 0, 50, 0, 70, 0, 57, 0, 38, 0, 77, 0, 73, 0, 95, 0, 48, 0, 48, 0, 0, 0, 72, 0, 73, 0, 68, 0, 92, 0, 86, 0, 73, 0, 68, 0, 95, 0, 51, 0, 52, 0, 51, 0, 52, 0, 38, 0, 85, 0, 80, 0, 58, 0, 48, 0, 48, 0, 48, 0, 49, 0, 95, 0, 85, 0, 58, 0, 48, 0, 48, 0, 48, 0, 54, 0, 0, 0, 72, 0, 73, 0, 68, 0, 95, 0, 68, 0, 69, 0, 86, 0, 73, 0, 67, 0, 69, 0, 95, 0, 83, 0, 89, 0, 83, 0, 84, 0, 69, 0, 77, 0, 95, 0, 75, 0, 69, 0, 89, 0, 66, 0, 79, 0, 65, 0, 82, 0, 68, 0, 0, 0, 72, 0, 73, 0, 68, 0, 95, 0, 68, 0, 69, 0, 86, 0, 73, 0, 67, 0, 69, 0, 95, 0, 85, 0, 80, 0, 58, 0, 48, 0, 48, 0, 48, 0, 49, 0, 95, 0, 85, 0, 58, 0, 48, 0, 48, 0, 48, 0, 54, 0, 0, 0, 72, 0, 73, 0, 68, 0, 95, 0, 68, 0, 69, 0, 86, 0, 73, 0, 67, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"
  "72, 0, 73, 0, 68, 0, 92, 0, 86, 0, 73, 0, 68, 0, 95, 0, 51, 0, 52, 0, 51, 0, 52, 0, 38, 0, 80, 0, 73, 0, 68, 0, 95, 0, 48, 0, 49, 0, 65, 0, 51, 0, 38, 0, 82, 0, 69, 0, 86, 0, 95, 0, 48, 0, 49, 0, 48, 0, 48, 0, 38, 0, 77, 0, 73, 0, 95, 0, 48, 0, 48, 0, 0, 0, 72, 0, 73, 0, 68, 0, 92, 0, 86, 0, 73, 0, 68, 0, 95, 0, 51, 0, 52, 0, 51, 0, 52, 0, 38, 0, 80, 0, 73, 0, 68, 0, 95, 0, 48, 0, 49, 0, 65, 0, 51, 0, 38, 0, 77, 0, 73, 0, 95, 0, 48, 0, 48, 0, 0, 0, 72, 0, 73, 0, 68, 0, 92, 0, 86, 0, 73, 0, 68, 0, 95, 0, 51, 0, 52, 0, 51, 0, 52, 0, 38, 0, 85, 0, 80, 0, 58, 0, 48, 0, 48, 0, 48, 0, 49, 0, 95, 0, 85, 0, 58, 0, 48, 0, 48, 0, 48, 0, 54, 0, 0, 0, 72, 0, 73, 0, 68, 0, 95, 0, 68, 0, 69, 0, 86, 0, 73, 0, 67, 0, 69, 0, 95, 0, 83, 0, 89, 0, 83, 0, 84, 0, 69, 0, 77, 0, 95, 0, 75, 0, 69, 0, 89, 0, 66, 0, 79, 0, 65, 0, 82, 0, 68, 0, 0, 0, 72, 0, 73, 0, 68, 0, 95, 0, 68, 0, 69, 0, 86, 0, 73, 0, 67, 0, 69, 0, 95, 0, 85, 0, 80, 0, 58, 0, 48, 0, 48, 0, 48, 0, 49, 0, 95, 0, 85, 0, 58, 0, 48, 0, 48, 0, 48, 0, 54, 0, 0, 0, 72, 0, 73, 0, 68, 0, 95, 0, 68, 0, 69, 0, 86, 0, 73, 0, 67, 0, 69, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"
  )
  
  ;; This configuration allows you to customize the length limit on dynamic macros. The default limit is 128 keys.
  dynamic-macro-max-presses 20
  
  ;; dynamic-macro-delay-between-replay-actions customizes the number of ticks
  ;; (approx 1ms) between each replay action of a dynamic macro. The default
  ;; value is 5. This may need to be increased if some state changes, e.g. a
  ;; layer change is not happening at the right time.
  ;; dynamic-macro-delay-between-replay-actions 5
  
  movemouse-smooth-diagonals yes
  movemouse-inherit-accel-state yes  ;; not much effect
)
(platform (wintercept)
(defvar
  y y	;; INFO wintercept confuses y and z but can be solved with deflocalkeys, vars does not work in defsrc, ( => $z $y can be removed?!) 
  z z
  )
)
(platform (win)
(defvar 
  y y
  z z
  ;; TODO use variables for rsft rctl to handle non interception RDP cases 
  )
)
(platform (winiov2)
(defvar 
  y z ;; the flip is needed on QUERTY keyboards on non QUERTY defsrc also needs to be switched
  z y 
  )
)
(defvar
  off nop0 ;; $off used to deactivate template-features
  ;; timers - this is done to simplyfy adjustment of timing differences on different computers/keyboards 
  100 100 ;; punctuation
  120 120 ;; j!
  140 140 ;; 1! " $ ? # % } ; and tap-dance punctuation
  145 145
  150 150 ;; ( and )
  160 160 ;; homerow shift and & \ @ '
  180 180 ;; template and Ã¶ =
  200 200 ;; layers numbers / | { caps-layer
  240 240
  300 300 ;; homerow ctl
  340 340
  350 350
  400 400
  450 450
  500 500 ;;==
  600 600
  700 700
  800 800
  900 900 ;;===
)

(deflocalkeys-wintercept
  -    191
  Ã¼    219
  +    221
  #    220
  Ã¶    186
  Ã    189
  ^    192
  Â´    187
  Ã¤    222
  ;;<    226 ;;in "102d" | "lsgt" | "nubs" | "nonusbslash" | "ï¹¨" | "<" 
  y    90
  z    89
  ;;- 555 INFO random custom numbers does not work with interception
)

(deflocalkeys-win ;; https://www.toptal.com/developers/keycode
  -    189
  Ã¼    186
  +    187
  #    191
  Ã¶    192
  Ã    219
  ^    220
  Â´    221
  Ã¤    222
  ;;<    226
  y    89    ;; ( y and z are flipped compared to wintercept)
  z    90
)
;; winiov2 doubles AHK keys in a predictabele manner ::by:: becomes ::bbyy::
;; winiov2 kills modifiers on Razor Mouse - can be solved by using synapse makros
;; winiov2 has problems with C+Y = Ditto on the mouse (naga displays C+Z) - can also be solved by using synapse makros
(deflocalkeys-winiov2 ;; same numbers as wintercept?! z and y are skipped
  -    191  ;; /
  Ã¼    219
  +    221
  #    220 
  Ã¶    186
  Ã    189
  ^    192
  Â´    187  ;; = Problems in layer
  Ã¤    222
;;  y    90
;;  z    89
;;  x    80
;;  p    88
)
(defalias
;; *** numlock on / off indicator for CAPS or other sticky layers *** BUG code must be doubled
  ;;.nly (cmd-output-keys powershell.exe -NoProfile -NoLogo -NonInteractive "if ($([console]::NumberLock) -match 'True') { echo '()' } else { echo '(NumLock)' }")
 .nly (cmd AutoHotkey numlockon.ah2)
 ;;.nln (cmd-output-keys powershell.exe -NoProfile -NoLogo -NonInteractive "if ($([console]::NumberLock) -match 'True') { echo '(NumLock)' } else { echo '()' }")
 .nln (cmd AutoHotkey numlockoff.ah2)
)
(defvirtualkeys
  ;;nlockon/off is used over .nly/n in while-held scenarios
  ;;nlockon  (cmd-output-keys powershell.exe "if ($([console]::NumberLock) -match 'True') { echo '()' } else { echo '(NumLock)' }")
  ;;nlockoff (cmd-output-keys powershell.exe "if ($([console]::NumberLock) -match 'True') { echo '(NumLock)' } else { echo '()' }")
  nlockon  (cmd AutoHotkey numlockon.ah2)
  nlockoff (cmd AutoHotkey numlockoff.ah2)
  ;;*** NUMBERS/ALT TAB ***
  ctl lctl
  sft lsft
  met lmet
  alt lalt
  tab tab
  ;; misc
  mouselight M-S-f
  to-base (layer-switch base)
  vcaps   (layer-while-held CAPS)

)
;; TODO-Usage E-i -> spc E-s -> End E-c -> Home TODO 
(deftemplate same-side-lshift (defaultaction trigger action)
	(switch
		(rsft lctl rctl ralt lalt lmet rmet) $defaultaction break ;; lshift is missing from the list 
		($trigger) $action break
		() $defaultaction break
	)
)
;; TODO decide on the correct fast typing solution
#|
(deftemplate homerowmod (timeouttap timeouthold char mod)
  (switch 
    ((key-timing 3 less-than 140)) $char break
    () (tap-hold-release 0 $timeouthold  $char $mod) break
  )
)
(deftemplate homerowmodexcept (timeouttap timeouthold char mod typinglist)
  (switch 
    ((key-timing 3 less-than 140)) $char break
    ;;() (tap-hold-except-keys 0 $timeouthold  $char $mod $typinglist) break
	() (tap-hold-release 0 $timeouthold  $char $mod) break
  )
)
(deftemplate homerowmodright (timeouttap timeouthold char mod mod2)
  ;; This is only used to fix an RDP issue with Win IO v2 where rsft is ignored
  (switch 
    ((key-timing 3 less-than 140)) $char break
    () (tap-hold-release 0 $timeouthold  $char (multi $mod $mod2)) break
  )
)
(deftemplate homerowmodrel (timeouttap timeouthold char mod)
  (switch 
    ((key-timing 3 less-than 450)) $char break
    () (tap-hold-release 0 $timeouthold  $char $mod) break
  )
)
|#

(deftemplate homerowmod (timeouttap timeouthold keytap keyhold)
	;;(tap-hold-except-keys $timeouttap $timeouthold 
	(tap-hold $timeouttap $timeouthold 
		(multi $keytap  @.tp) 
		$keyhold
		;;(a)
	)
)
(deftemplate homerowmodexcept (timeouttap timeouthold keytap keyhold typinglist)
	(tap-hold-release-keys $timeouttap $timeouthold 
		(multi $keytap  @.tp) 
		$keyhold
		$typinglist
	)
)
(deftemplate homerowmodright (timeouttap timeouthold keytap keyhold keyhold2)
    ;; This is only used to fix an RDP issue with Win IO v2 where rsft is ignored
	(tap-hold $timeouttap $timeouthold 
		(multi $keytap  @.tp) 
		(multi $keyhold $keyhold2)
	)
)
(deftemplate homerowmodrel (timeouttap timeouthold keytap keyhold)
	(tap-hold-release $timeouttap $timeouthold 
		(multi $keytap  @.tp) 
		$keyhold
	)
)


;;****** key-hold-repeat INFO base concept  ***********************************************************
;;**** re-tapping a key will repeat the last output produced by this key (wether tap or hold)      ****
;;**** historykeys resambles keyrepeat broken up into all its individual keystrokes/modifiers      ****
(deftemplate  key-hold-repeat (timehold time2ndhold keytap keyhold keyrepeat historykey3 historykey2 modlesshistorykey1 combokeylist keyrepeat3) 
;; sam v| (t! key-hold-repeat  $200      $800         v      @.|      @.|        XX          ralt        <                  (Ã¼ 7)        del     ) 
;; TODO using RA- ralt may only work with "process-unmapped-keys yes" and wintercept
;; $historykey3 is currently only used to disabel symbol repeat for / in </div TODO should then be a list 
;; y` ,;> .:< -_~ and homrow mods have there own implementation
;; TIP this template can be wraped in (multi ... @.tp) But for some scenarios (non windtercept / no powertoys / windows 11 ) may require calling @.tp from inside this template  
 (tap-dance-eager $150 (    
    (tap-hold 200 $timehold 	;; autorepeat for letters is possible  but maybe not needed
		;; I.a first tap of TAP-DANCE holding and then retapping will repeat the hold action (not the long-hold)
        (switch
			(if-not-equal $historykey2 XX
				;; $historykey3 prevents symbol repeat for </div </d // /d
				(if-not-equal $historykey3 XX (
				                               (and (key-history $modlesshistorykey1 1)(key-history $historykey2 2)(key-history $historykey3 3))
											   ) $keytap break )
				(if-not-equal $historykey3 XX (
				                               (and (key-history $modlesshistorykey1 1)(key-history $historykey2 2))
											   ) $keyhold break )							   
				(if-equal     $historykey3 XX ((and (key-history $modlesshistorykey1 1)(key-history $historykey2 2))
                                			   ) $keyhold break )
			)
			(if-equal $historykey2 XX
				((key-history $modlesshistorykey1 1))  $keyhold break
			)
			
		() (multi $keytap @.tp) break
		)
		;; I.b hold of first tap of TAP-DANCE - manual Shift overwrites hold / no autorepeat / long-hold for (), {},...
		(if-equal     $keyrepeat XX
				(switch
					(rsft lsft) 
						(if-equal $keytap a
							(multi ralt lctl (macro(unshift 9))) ;; hardcoded S+Hold(a)=]
						)
						(if-not-equal $keytap a
							(multi (macro $keytap) @.tp)
						)
					break 
					()   	 (macro-release-cancel-and-cancel-on-press $keyhold 1000 bspc)			break			
				)	
		)
		(if-not-equal $keyrepeat XX 
			(if-equal     $keyrepeat3 XX  ;; for ===
				(switch
					(rsft lsft) 
						(if-equal $keytap u
							(multi ralt lctl (macro(unshift 8))) ;; hardcoded S+Hold(u)=[
						)
						(if-not-equal $keytap u
							(multi (macro $keytap) @.tp)
						)
					break
				
					;;(rsft lsft) (multi (macro $keytap) @.tp) break ;; Shift Prefer / Shift protection - shifting will disable the hold feature TODO this will not work fine with ctrl+sft+#
					()  (macro-release-cancel-and-cancel-on-press $keyhold $time2ndhold $keyrepeat 1000 bspc bspc)	break
				)
			)
			(if-not-equal     $keyrepeat3 XX
				(switch
						(rsft lsft) (multi (macro $keytap) @.tp) break 
						()  (macro-release-cancel-and-cancel-on-press $keyhold $time2ndhold $keyrepeat  $time2ndhold $keyrepeat3  1000 bspc bspc bspc)	break			
				)
			
			)
		)	
	)
	;; II. second tap of TAP-DANCE
	(tap-hold 1 $timehold 	
		;; II.a this is identical to I.a
		(switch
			(if-not-equal $historykey2 XX
				;; $historykey3 prevents symbol repeat for </div </d // /d
				(if-not-equal $historykey3 XX (
				                               (and (key-history $modlesshistorykey1 1)(key-history $historykey2 2)(key-history $historykey3 3))
											   ) $keytap break )
				(if-not-equal $historykey3 XX (
				                               (and (key-history $modlesshistorykey1 1)(key-history $historykey2 2))
											   ) $keyhold break )							   
				(if-equal     $historykey3 XX ((and (key-history $modlesshistorykey1 1)(key-history $historykey2 2))
                                			   ) $keyhold break )
			)
			(if-equal $historykey2 XX
				((key-history $modlesshistorykey1 1))  $keyhold break
			)
			() (multi $keytap @.tp) break
		)
		;; II.b no need for manual Shift protection / autorepeat enabled
		(switch
			((key-history $modlesshistorykey1 1)) $keyhold break				     ;; add double-tap-hold 
			((key-history $keytap 1)) (macro (unmod bspc) (unmod bspc)) fallthrough	 ;; double bspc has no explanation but is needed (including unmod) 
			((key-history $keytap 1)) $keyhold break
			()  (multi 	
					(macro $keyhold ) 
					(tap-hold $180 $time2ndhold XX ;;must $180 be a parameter?
							(if-not-equal $keyrepeat XX (macro $keyrepeat ))      ;;to do (), {},... keyrepeat cannot be a macro itself
							(if-equal $keyrepeat XX XX)
					)
				) break
		)
	)
 )	
))

(defalias
  .dsk (multi lmet lalt Ã)  ;; AHK desktop switch must use MODS to be active within RDP  SYMBOL+M 
  .CAPSon  (multi (on-press toggle-vkey  vcaps) @.nly) ;;using toggle to be more error redundant
  .CAPSoff (multi (on-press release-vkey vcaps) @.nln)
;; *** LAYER-TOGGLE & SWITCH-LAYER(STICKYNESS) ***
  .num    (layer-while-held numbers)
  .numtab (layer-while-held numberstab)
  .sym    (layer-while-held symbols)
  .syv    (one-shot 2000 (layer-while-held vsymbols))
  .syvv   (layer-while-held vsymbols)
  .sy1    (one-shot 2000 (layer-while-held symbols))
  .fkey   (layer-while-held fkeymacro)
  .fkyx   (layer-switch fkeymacro)
  .fkyn   (release-layer numbers)
  .basen  (multi (layer-switch base) @.nln)
  .base   (layer-while-held base)
  .numfix (multi (layer-switch numfix) @.nly)

;; *** LEFT_Spacebar = F14 : RETURN *** SYMBOLS *** LEFT_Shift + LEFT_Spacebar_hold == numbers ; Shift + LEFT_Spacebar_tap == CAPS-layer ***
  .ff14 (tap-hold  $200 $200
			(switch
				(rsft lsft) @.CAPSon break
				() ret break
			)
			(fork 
				(multi 
				   (macro nop3)  ;; break keyhistory
				   (layer-while-held numbers) 
				   (tap-hold-press-timeout 0 1100   ;; we have to use press to not cancel holding a key
						(layer-while-held symbols)
						(layer-while-held symbols) (layer-while-held numbers)
				   )
				)
				(layer-while-held numbers)
				(lsft)
			)
  )
;; *** LEFT_Spacebar on CAPS-layer  
  .ff14c (tap-hold  $200 $200  
			(fork ret @.CAPSoff (rsft lsft))
			(fork 
				(multi (layer-while-held numbers) (layer-while-held symbols))
				(layer-while-held numbers)
				(lsft)
			)
  )
  ;; *** Numberline(unused) + dynamic-macro (unused) ***
  .ff15 (tap-hold 1 $200  (tap-dance $300 ((on-release tap-vkey  nlockoff) (multi @.nly (layer-switch numberline)))) (multi (layer-while-held numberline) (on-press tap-vkey  nlockon) (on-release tap-vkey  nlockoff) )) ;; no numlock warning when using keypad numbers possible
  .ff15c (tap-hold 1 $200  @.CAPSoff (layer-while-held numberline))

;; *** MACRO + F-Keys layer *** TIP removing one-shot solves problems with hitting the key by accident
  .ff13 
		(tap-hold $200 $200 
			(multi 
               (on-press release-vkey vcaps )
			   (layer-switch base)
			   @.nln
			   (release-key lctl)
			   (release-key rctl)
			   (release-key lsft)
			   (release-key rsft)
			   (release-key lalt)
			   (release-key ralt)
			   (release-key lmet)
			   (release-key rmet)
			)
			(multi 
			   F21  ;; F21 is not used in ahk it just consumes a key press TODO why?
               (on-press release-vkey vcaps )
			   (layer-switch base)
			   @.nln
			   (layer-while-held fkeymacro)
			)
		)
  .nav  (tap-hold  $240 $240 
			spc
			(fork (multi (macro nop3) @.fkey @.num) (multi @.num @.sym) (rsft))
		) ;; RIGHT sft + RIGHT spc == symbols ; nop3 signals layer switch 
  .nav-typing   (tap-hold  $200 $200 (multi @.basen spc) (fork @.num @.sym (rsft))) 
;; *** ONE SHOT MODIFIERS ***
  .cabs  (tap-hold $200 $300 @.CAPSon lsft)
  .scabs (tap-hold $200 $300 @.CAPSoff lsft) ;; inverted Shift for cabs layer
  .osss  (one-shot 2000 lsft)
;;.ocl   (one-shot 2000 lctl) 
  .oal   lalt ;; one-shot not used, it causes trouble when hit by accident (one-shot 2000 lalt)
  .oml   (one-shot 2000 lmet) ;; TODO-Usage

  ;; disalble tap-hold keys if typing rapidly but reenable after a shord idle period
  .tpof (macro nop6)
  .tp  (multi
    ;;(layer-switch typing) ;; causes a P3 issue with Ffj instead of FJ => use one-shot instead        
	(one-shot 95 (layer-while-held typing)) ;; solves P3 only in the FJ case
    (on-idle  95 tap-vkey to-base )
  )
  ;; modded german key aliases 
  .' S-#
  .+ +
  .* S-+
  ._ S--
  .~ RA-+ ;;(unicode ~) ;;RA-+ ;;(multi lctl ralt +)
  .| RA-102d
  .} RA-0   ;; TIP/BUG C-A- works with rdp but not in windows terminal   C-A- 7 8 9 0 shortcuts must be deleted
  .{ RA-7 ;; (multi lctl ralt 7)
  .] RA-9
  .[ RA-8
  .\ RA-Ã         ;;(unicode \) INFO has been better in some environments in the past
  .áº RA-S-Ã
  .â¬ (unicode r#"â¬"# ) ;; (macro RA-e )
  .@ RA-q         ;; INFO (unicode @ ) will mess up keyhistory but may be better on non wintercept
  .Â² RA-2
  .Â³ RA-3
  .Âµ RA-m
  .! S-1
  .Ë S-2  ;; Ë look-a-like is used because @." is no valid alias, to be displayed correctly in console requires a font that can - e.g. cascadia
  .Â§ S-3
  .$ S-4
  .% S-5
  .& S-6
  ./ S-7
  .â S-8  ;; â look-a-like is used because @.( is no valid alias, to be displayed correctly in console requires a font that can - e.g. cascadia
  .â S-9  ;; â look-a-like is used because @.) is no valid alias, to be displayed correctly in console requires a font that can - e.g. cascadia
  .= S-0
  .? S-Ã
  .; (macro S-, )
  .: (macro S-. )
  .> S-102d
  .< 102d   ;; not really needed because < is a deflocalkey but having @.< and @.> looks consistent
  
  ;; **** dead keys to normal keys ****
  .Â´ (macro = spc)
  .` (macro S-Â´ spc)
  .^ (unicode ^)       ;; ^ = \ - shifting (macro grv spc) will produce an incorrect space now: "Â° " TODO unicode may prevent shortcuts
  .Â° (macro S-^)
  ;;.F20 (macro F20) ;; ahk unused
  ;;.F19 (macro F19) ;; ahk unused
  ;;.Ã¤ (macro ') 
  ;;.Ã¼ (macro [)
  ;;.Ã¶ (macro ;) 
  
  ;; mouse buttons
  .ð°l mlft ;;M-C-A-f ;; using AHK to do the click
  .ð°r mrgt ;;M-C-A-d
  .ð°m mmid ;;M-C-A-s
  
  
  ;; outer/special keys
  .tab (tap-hold-press  $200 $800 tab lctl );; TODO-Usage is ctl ever used?
  .rtc (tap-hold-release $200 5000 ret lctl) ;; done with QMk
  .ret ret ;; BUG QMK might still do ctl+sft but is minor
  .rtw del ;; TODO find a use for this key
  .rsd (tap-hold-release $200 $240 @.syv (multi rsft lsft)) ;; TODO not used ?! BUG rsft get ignored on RDesktop -> use lsft  or (multi rsft lsft) ?
  .ral S-C-M-A-9 ;; release ALL key (BUG) kanata cannot release stuck keys from ahk (both tools with elevated rights) PRESS F24 FOR RELEASE ALL MODS
  
  ;; *** AUTOSHIFT in number row ***  ;; INFO number row with autorepeat
  .^0 (tap-hold $400 $300 (fork 0 (unshift 0) (rsft)) (fork @.^ @.Â° (lsft rsft)))  
  .1  (tap-hold $400 $500 (fork 1 (unshift 1) (nop2)) (macro S-1 ))
  .2  (tap-hold $400 $300 (fork 2 (unshift 2) (nop2)) (macro-release-cancel @.Ë $400 @.Ë ))
  .3  (tap-hold $400 $300 (fork 3 (unshift 3) (nop2)) (macro S-3 ))
  .4  (tap-hold $400 $500 (fork 4 (unshift 4) (nop2)) (macro S-4 ))
  .5  (tap-hold $400 $500 (fork 5 (unshift 5) (nop2)) (macro S-5 ))
  .6  (tap-hold $400 $500 (fork 6 (unshift 6) (nop2)) (macro S-6 ))
  .7  (tap-hold $400 $500 (fork 7 (unshift 7) (nop2)) (macro RA-7 ))
  .8  (tap-hold $400 $500 (fork 8 (unshift 8) (nop2)) (macro RA-8 ))
  .9  (tap-hold $400 $500 (fork 9 (unshift 9) (nop2)) (macro RA-9 ))
  .0  (tap-hold $400 $500 (fork 0 (unshift 0) (nop2)) (macro RA-0 ))
  
  ;; *** keypad/homerow mod aliases uses in layer numberline *** TODO NUMLOCK must be enforced
  .k1 (tap-hold $200 $500 Numpad1 lmet)
  .k2 (tap-hold $200 $500 Numpad2 lalt)
  .k3 (tap-hold $200 $500 Numpad3 lctl)
  .k4 (tap-hold $200 $500 Numpad4 lsft)
  .k5 (tap-hold $200 $500 Numpad5 lmet)
  .k6 (tap-hold $200 $500 Numpad6 lmet)
  .k7 (tap-hold $200 $500 Numpad7 lsft)
  .k8 (tap-hold $200 $500 Numpad8 lctl)
  .k9 (tap-hold $200 $500 Numpad9 lalt)
  .k0 (tap-hold $200 $500 Numpad0 lmet)
  
  ;; *** dynamic-macro TODO  use them ***
  .dr1 (dynamic-macro-record 1)
  .dr2 (dynamic-macro-record 2)
  .dr3 (dynamic-macro-record 3)
  .dr4 (dynamic-macro-record 4)
  .dr5 (dynamic-macro-record 5)
  .dp1 (dynamic-macro-play 1)
  .dp2 (dynamic-macro-play 2)
  .dp3 (dynamic-macro-play 3)
  .dp4 (dynamic-macro-play 4)
  .dp5 (dynamic-macro-play 5)
  .dms dynamic-macro-record-stop
  .dst (dynamic-macro-record-stop-truncate 1)
  
;; *** HOME ROW MODS *** 
;; BUG t   (tap-hold 1 $160 (multi t @.tp) (multi rsft (tap-hold 1 $900 XX (layer-while-held notp))) ) ;; rsft ,rctl have RDP problems without interception
  .e] (t! homerowmodexcept 0 $160 e lsft (i))
  .t/    (t! homerowmodright 0 $160 t lsft rsft) 
  .i[    (t! homerowmodexcept 0 $300 i lctl (e))
  ..i[  (tap-hold $500 $500 i lctl )
  ..[   (tap-hold $500 $500 @.[ lctl ) ;; used on symbol layer
  ..-   (tap-hold $500 $500 - lctl )   
  .n-    (t! homerowmod 1 $300 n rctl)
  ;; Bug in no interception rctl+y  to start ditto, then ditto will not act on keyboard input 
  .s^â   (t! homerowmodrel 1 $450 s lalt)
  .hâ   (t! homerowmod 1 550 h rmet)
  .câ   (t! homerowmod 1 $450 c lmet)
  .r_â  (t! homerowmodrel 1 $450 r lalt)
  .rsf  (tap-hold-release $350 $500 - rsft)

  ;; chords
  _-~   (chord vÃ¼Ã¤ -)		;; sticky numbers
  _:<   (chord vÃ¼Ã¤ .)
  _;>   (chord vÃ¼Ã¤ ,)
  DOT   (chord VÃÃ .)		;; sticky numbers
  COM   (chord VÃÃ ,)
  DSH   (chord VÃÃ -)
  _7    (chord exit79 7)	;; exit numbers
  _8    (chord exit79 8)
  _9    (tap-hold 1 $200 (chord exit79 9) @.basen)
  _|    (chord |} <)      ;; mods will be added later in defchord < is | 0 is }
  _}    (tap-hold 1 $200 (chord |} 0) (release-layer symbols)) ;; tap-hold to exit layer
  ..]   (tap-hold 1 $200 @.] (release-layer symbols)) ;; Go back to number layer TODO remember this
  
  ;; normal keys
  .v!  (t! key-hold-repeat $140 $800  v S-1  XX XX lsft 1 ($off) XX)
  .Ã¼Ë  (t! key-hold-repeat $140 $800 Ã¼ @.Ë @.Ë XX lsft 4 ($off) XX)
  .uâ  (t! key-hold-repeat $150 $400 u @.â  @.â XX lsft 8 ($off) XX)                        ;; (  ()
  ;; TIP aâ (multi (tap-hold 1 $150  a  S-9) @.tp) this order works with powertoys but causes problems with RDP ua vs au
  ;; TIP aâ LONG HOLD with no Powertoys running (tap-hold 1 $150 (multi a @.tp) (fork (macro-release-cancel S-9 $600 bspc RA-9 ) C-a (lctl rctl)) )                   ;; ) [ todo find a better use
  ..aâ  (t! key-hold-repeat $150 $800 a @.â XX XX lsft 9 ($off) XX)
  .aâ   (fork @..aâ (macro a 10 c) (lctl rctl)) ;; do automatic copy C-(ac) after C-a
  .j%   (t! key-hold-repeat $160 $800 j @.% @.% XX lsft 5 ($off) XX)
  .p&   (t! key-hold-repeat $160 $800 p @.& @.& XX lsft 6 ($off) XX)
  .l?   (t! key-hold-repeat $140 $800 l @.? @.? XX lsft Ã ($off) XX)   ;; ? = S-Ã = S-[      i ? ??
  .m\   (t! key-hold-repeat $140 $800 m @.\ @.\ XX ralt Ã ($off) XX)
  .Ã    (macro (unshift Ã))
  .k    (macro k)
  .f#   (t! key-hold-repeat $140 $800 f # XX XX XX # ($off) XX)
  .w$   (t! key-hold-repeat $140 $400 w @.$ @.$ XX lsft 2 ($off) XX)
  .q@   (t! key-hold-repeat $160 $800 q RA-q XX XX ralt q ($off) XX) 
  .o'   (t! key-hold-repeat $160 $800 o S-#  S-# XX lsft # ($off) XX)
  .d/   (t! key-hold-repeat $200 $800 d S-7  S-7 < lsft 7 ($off) XX)
  .z|   (t! key-hold-repeat $200 $800 $z @.| @.| XX ralt < ($off) XX) 
  .y`   (tap-hold 1 160 ;; tap=y or hold=` or long=``` hold+tap...=`````` INFO no autorepeat
			(switch 
				((and (key-history nop5 1)(key-history Â´ 3)(key-history spc 2)))  (multi lsft Â´ spc nop5) break
				() $y break
			)
			(fork (multi lsft Â´ spc nop5  (tap-hold $200 $800 XX (multi (unicode ` ) (unicode ` )))) (unicode Y) (lsft rsft))
	    )                   
  .x{   (t! key-hold-repeat $200 $500 x RA-7 RA-0 XX ralt 7 ($off) XX)								;; { {}
  ;;INFO Ã¤}  (tap-hold-release-timeout $200 $400 Ã¤ @.syvv @.} ) ;; layer activation if Ã¤ is comboed;  not needed on V10 bc of second space bar
  .Ã¤}   (t! key-hold-repeat $140 $800 Ã¤ RA-0 XX XX ralt 0 ($off) XX) ;; der v XX scheint Ã¼berflÃ¼ssig zu sein
  .Ã¶+   (t! key-hold-repeat $180 $800 Ã¶ + + XX XX + ($off) XX)
  
  .g*	(t! key-hold-repeat $160 $800 g S-+ XX  XX lsft + ($off) XX)
  .b=   (t! key-hold-repeat $160 $600 b S-0 S-0 XX lsft 0 ($off) S-0)
  ;; TODO layer-toggle,... shoud break key-history - implemented in @nav by multi nop3
  ,;>  (tap-hold  1 $160 (tap-dance $160 (
							(switch
								(lsft rsft) 102d break ;; TODO if there are any C-S-, shortcuts we have to check for non shift modifier first
								((and (key-history lsft 2)(key-history , 1))) S-, break
								((and (or (key-history lsft 2)(key-history rsft 2)(key-history lalt 2)(key-history ralt 2)) (key-history 102d 1)))  @.> break
								((key-history 102d 1)) @.> break 
								((and (key-history - 1))) @.> break			
								()	, break 
							)
							(tap-hold 10 $140 (switch
												(lsft rsft) 102d break
												((and (key-history lsft 2)(key-history , 1))) (macro S-, S-,) break
												((key-history 102d 1)) (macro @.> @.>) break
												() (macro , ,) break
											 )
											 (macro @.>)                               ;;  double-tap-hold < 
							)
						  )
						)
						;; hold
						(switch
							(lsft rsft) 102d break
							((and (key-history lsft 2)(key-history , 1)))  (macro-release-cancel-and-cancel-on-press S-, $800  bspc @.> $800 bspc ,   $800 bspc ) break
							((key-history 102d 1))                         (macro-release-cancel-and-cancel-on-press @.> $800  bspc ,   $800 bspc S-, $800 bspc ) break
							((key-history  -   1))                         (macro-release-cancel-and-cancel-on-press @.> $800  bspc ,   $800 bspc S-, $800 bspc ) break
							()	                                           (macro-release-cancel-and-cancel-on-press S-, $800 bspc @.> $800 bspc )  break ;; Long_Hold
						)	
		) 
		 
  .:<  (tap-hold  1 $160 (tap-dance $140 (
							(switch
								(lsft rsft) (unmod 102d) break
								((and (key-history lsft 2)(key-history . 1))) S-. break
								((and (or (key-history lalt 2)(key-history ralt 2)) (key-history 102d 1))) . break
								((and (key-history lsft 2)(key-history 102d 1))) @.< break
								((and (key-history 102d 1))) @.< break
								()	. break 
							)
							(tap-hold 10 $160 (switch                                         ;; double-tap-hold = > tripple-tap-hold = .......
												(lsft rsft) (unicode <) break
												((and (key-history lsft 2)(key-history . 1))) (macro S-. S-.) break
												((key-history 102d 1)) (macro @.< @.<) break
												() (macro . .) break
											 )
											 (unicode <)
							)    
						)) 
						(switch
							(lsft rsft) (unmod 102d) break
							((and (key-history lsft 2)(key-history . 1)))    (macro-release-cancel-and-cancel-on-press S-. $800  bspc @.< $800 bspc .   $800 bspc ) break
							((and (key-history lsft 2)(key-history 102d 1))) (macro-release-cancel-and-cancel-on-press @.< $800  bspc .   $800 bspc S-. $800 bspc ) break
							()                                               (macro-release-cancel-and-cancel-on-press S-. $800  bspc @.< $800 bspc) break 
						)			
	   )
   -_~  (tap-hold  1 $120 (tap-dance $160 ( ;; slash/ is dash-  ~ is RA-+
							;; 1. tap~_
							(switch
								(lsft rsft) (multi ralt (unshift +)) break
								((and (or (key-history lalt 2)(key-history ralt 2)(key-history lctl 2)(key-history rctl 2)) (key-history + 1))) @.~ break
								((and (key-history lsft 2)(key-history / 1))) S-/ break
								() / break 
							)
							;; 2. tap
							(tap-hold 10 $120 (switch  ;; double-tap-hold is ~ tripple-tap-hold is --- ---
												(lsft rsft) (unicode ~) break
												((and (key-history lsft 2)(key-history / 1))) (macro S-/ S-/ ) break
												((and (or (key-history lalt 2)(key-history ralt 2))(key-history + 1))) (macro @.~  @.~ ) break
												() (macro / / ) break
											  )
											  (macro @.~)
							)
							;; 3. tap
							(tap-hold 10 $120 (switch  ;; double-tap-hold is ~ tripple-tap-hold is --- ---
												(lsft rsft) (multi ralt (unshift +)) break
												((and (key-history lsft 2)(key-history / 1))) (macro S-/ S-/ S-/ ) break
												((and (or (key-history lalt 2)(key-history ralt 2))(key-history + 1))) (macro @.~  @.~ @.~) break
												() (macro / / / ) break
											  )
											  @.~
							)			
						))
						;; hold
						(switch
							(lsft rsft) (multi ralt (unshift +)) break
							((and (or (key-history lsft 2)(key-history rsft 2))(key-history / 1))) (macro-release-cancel-and-cancel-on-press S-/ $800 bspc @.~ $800 bspc ) break  ;;  hold hold _ ____ TODO maybe bspc ~ is better than autorepeat
							((key-history + 1)) (macro-release-cancel-and-cancel-on-press @.~ $800 bspc / $800 bspc )  break ;;??? hold ~  ~ ~ ~ ~ 
							;; ((key-history / 1)) /   break ;; - ---
							() (macro-release-cancel-and-cancel-on-press S-/ $800 bspc @.~ $800 bspc ) break ;; Long_Hold
						)			
	   ) 
  .prnt (tap-hold 0 600 XX PrintScreen)		
)


(defchordsv2
  (n r) del 30 all-released  (game numbers)
  (t n) bspc 30 all-released  (game numbers)
  (t n r) C-bspc 30 all-released  (game numbers)
  (s e) esc 20 all-released (game numbers)
  (e i) (multi lsft lctl) 15 all-released (game numbers)  
  (t r) esc 20 all-released (game numbers)
  
  )
;; from NUMFIX to BASE
(defchords exit79 20
  (7    ) 7
  (  8  ) 8
  (    9) 9
  (7   9) @.basen
  (7 8  ) del
  (  8 9) bspc
  (7 8 9) C-bspc
)
;; from BASE to NUMFIX  THis seems to be the principal way : put chord in layer and call alias here (it also keeps the aliases clean) 
(defchords vÃ¼Ã¤ 50
  (.      ) @.:<
  (   ,   ) @,;>
  (.  ,   ) del
  (     - ) @-_~
  (.    - ) @.numfix
  (   , - ) bspc
  (.  , - ) C-bspc
)
(defchords VÃÃ 50
  (.      ) @-_~
  (   ,   ) @,;>
  (.  ,   ) del
  (     - ) @.:<
  (.    - ) (multi @.CAPSoff @.numfix)
  (   , - ) bspc
  (.  , - ) C-bspc
)
;; from SYMBOLS to NUMFIX CA(0) = }  CA(<) = | chord must be defined on the not modified keys
;; not needed anymore
(defchords |} 140
  (0      ) @.}
  (   <   ) @.|
  (0  <   ) @.numfix
)
;; defsrc querty laptop + und Ã 
;; (z und y und p und x sind in winiov2 in US-Anordnung aber in deflocalkey vertauscht) fÃ¼hrt zu problemen daher
#|  
(defsrc
  esc       F1   F13  F16  F24
  ^         1    2    3    4    5    6    7    8    9    0    Ã    Â´    bspc
  tab       q    w    e    r    t    y    u    i    o    p    Ã¼    +    #
  caps      a    s    d    f    g    h    j    k    l    Ã¶    Ã¤    ret
  lsft  <   z    x    c    v    b    n    m    ,    .    -    rsft
            lmet lalt      F14       spc            F15 ralt                           
) 
|#
;; defsrc for ansi german NOTED layout  
;; If you are looking for other keys, the file src/keys/mod.rs should hopefully provide some insight.
;; z and y are FLIPPED, positioning has no meaning but must be consistent with other layers
;; F1 unused / F24 declaration is required with process-unmapped-keys no? /   F13 = right-B  / F14 = left-Space

(platform (wintercept)
(defsrc
  esc       F1   F13  F16  F24
  grv         1    2    3    4    5    6    7    8    9    0    +    Â´    â«
  tab       -    .    u    a    ,    p    f    l    m    y    q    Ã    #
  caps      c    s    i    e    o    d    t    n    r    h    k    ret
  lsft 102d x    v    Ã¼    Ã¤    Ã¶    b    g    w    z    j    rsft
            lmet lalt      F14       spc            F15 ralt                           
))
(platform (win)
(defsrc
  esc       F1   F13  F16  F24
  ^         1    2    3    4    5    6    7    8    9    0    +    Â´    â«
  tab       -    .    u    a    ,    p    f    l    m    y    q    Ã    #
  caps      c    s    i    e    o    d    t    n    r    h    k    ret
  lsft 102d x    v    Ã¼    Ã¤    Ã¶    b    g    w    z    j    rsft
            lmet lalt      F14       spc            F15 ralt                           
))
(platform (winiov2)
(defsrc
  esc       F1   F13  F16  F24
  ^         1    2    3    4    5    6    7    8    9    0    +    Â´    â«
  tab       x    Ã¼    u    a    Ã¤    p    f    l    m    j    q    Ã    #
  caps      c    s    i    e    o    d    t    n    r    h    k   ret
  lsft 102d z     .   ,    -    Ã¶    b    g    w    y    v    rsft
            lmet lalt      F14       spc            F15 ralt                           
))


;; TODO-Usage rsft +... rspace +... rstf-up = @.sym not used on alice keyboard. INFO rsft must be released before e.g. RAlt-keys like [] work.
;; INFO feat: rpt will repeat the unmodified key / rpt-any fails to repeat complex tap-hold sequences
(deflayer base
;;****************   .BASE.   ********************************************************
;; TODO dbl_tap autorepeat
;; rsft + rspc = symbols
;; sft+lspc = CAPSlayer / lspc+D = Desktop Cycle
;; F13 (right-B) = macro layer = rspc + k
;; F14 = left-Space = symbol layer / lsft+F14 = hold F14 = number layer
;; ret hold does ctl via QMK
  esc       F1    @.ff13 @.ff16 F24
  @.^0      @.1   @.2    @.3   @.4    @.5   @.6     @.7    @.8    @.9     @.0     @.dp1   @.prnt  bspc
  @.tab     @.x{  @.Ã¼Ë   @.uâ  @.aâ   @.Ã¤}  @.p&    @.f#   @.l?   @.m\    @.j%    @.q@    @.Ã     F24
  @.atx     @.câ  @.s^â  @.i[  @.e]   @.o'  @.d/    @.t/   @.n-   @.r_â   @.hâ    @.k     @.ret
  _ @.atm   @.y`  @_:<   @_;>  @_-~   @.Ã¶+  @.b=    @.g*   @.w$   @.z|    @.v!    @.rsf
            @.oml @.oal  @.ff14             @.nav         @.ff15 ralt   
#|
 CTRL + SPACE + ESC => Exit KANATA immediatly
 AltGr = F15 or qmk symbols|#
)
;; *** fast Typing layer - prevents Upper Case within words when typing fast ***
;; INFO unmod seems to solve RDP issues
(deflayer typing
;;****************   typing   ********************************************************
  esc _ _ _ _
;;@.^       @.1       @.2        @.3       @.4       @.5        @.6       @.7       @.8       @.9       @.0         -         del      bspc
  @.^       XX        XX         XX        XX        XX         XX        XX        XX        XX        XX          -         del      bspc
  _        (unmod x) (unmod Ã¼)  (unmod u) (unmod a) (unmod Ã¤) (unmod p) (unmod f) (unmod l) (unmod m)  (unmod j)  (unmod q) (unmod Ã) @.rtw
  _        (unmod c) (unmod  s) (unmod i) (unmod e) (unmod o) (unmod d) (unmod t) (unmod n) (unmod r)  (unmod h)  (unmod k)  ret
  @.osss _ (unmod $y) @.:<       @,;>      @-_~     (unmod Ã¶) (unmod b) (unmod g) (unmod w) (unmod $z) (unmod v)   @.rsf
            lmet      lalt       _         @.nav-typing         _ ralt              
)


(deflayer letters
  esc       F1    @.ff13 @.ff16 F24
  @.^0     @.1   @.2    @.3   @.4    @.5   @.6     @.7    @.8    @.9    @.0     @.dp1   prnt    bspc
  @.tab     j    z    u    a    y    p    f    l    m    w    q    Ã   F24
  @.atx     c    s    i    e    o    d    t    n    r    h    k         @.ret
  _ @.atm   x    v    Ã¼    Ã¤    Ã¶    b    g    ,    .    -    rsft
            @.oml @.oal  @.ff14             @.nav          @.ff15 ralt 
)			
;; ************** GAME ***************** unused
(deflayermap (game)
  - q
  u w
  s a
  i s
  e d
  , q
  a e
  F14 spc
  F15 (layer-switch base)
)

;; *** UPPER CASE LAYER - use spc to exit -  hold spc to exit w/o spc TODO shift into lower case does not work ***
;; scabs Shift cabs and QMK lsft Home interfere
(deflayer (CAPS icon caps.ico)
  esc _ _ _ _
  @.^        @.1   @.2    @.3   @.4    @.5   @.6   @.7   @.8   @.9   @.0   -     del  bspc
  _          @.X{  @.ÃË   @.Uâ  @.Aâ   @.Ã}  @.P&  @.F#  @.L?  @.M\  @.J%  @.Q@  @.Ã  @.rtw
  _          @.Câ  @.S    @.I[  @.E]   @.O'  @.D/  @.T   @.N   @.R   @.Hâ  @.K   ret
  @.scabs _  @.Y`  @DOT   @COM  @DSH   @.Ã+  @.B=  @.G*  @.W$  @.Z|  @.V!  @.rsf
             _     _      @.ff14c      _           @.ff15c ralt   
)
;; *** UPPER CASE ALIASES for CAPS layer ***
(defalias
  .J  (switch
  		(rsft lsft) (unshift j) 		break
  		(rctl lctl) (unshift j)		break
  		() 	(tap-hold 1 $200 (unicode J) (macro @.%))	break
  )
  .Câ (switch
  		(rsft lsft) (unshift c) 		break ;; Shift on caps-layer become lowercase again
  		(rctl lctl) (unshift c)			break ;; do Ctrl+C instead of Ctrl+Shift+C
  		() 			(tap-hold 1 $200 S-c @.`)	break
  )
  .E]  (switch
          (rsft)  (tap-hold 1 $200 (unshift e) (layer-switch base) ) break
          ()  (tap-hold 1 $200 S-e lsft)  break 
       )
  .T   (switch
          (lsft)  (tap-hold 1 $200 (unshift t) (layer-switch base) ) break
          ()  (tap-hold 1 $200 S-t rsft)  break 
       )
  .Z|  (fork (tap-hold 1 $200 (unicode Z) (macro @.|)) (unshift $z) (rsft lsft))
  .K   (fork (macro S-k)                         (unshift k) (rsft lsft))
  .V!   (fork (tap-hold 1 $200 S-v (macro @.!))  (unshift v) (rsft lsft))
  .Uâ  (fork (tap-hold 1 $200 S-u (macro @.â))   (unshift u) (rsft lsft))
  .Aâ  (fork (tap-hold 1 $200 S-a (macro @.â))   (unshift a) (rsft lsft))	 
  .S   (fork (tap-hold 1 $200 S-s (macro @.^))   (unshift s) (rsft lsft))
  .I[  (fork (tap-hold 1 $200 S-i (macro @.[))   (unshift i) (rsft lsft))
  .P&  (fork (tap-hold 1 $200 S-p (macro @.&))   (unshift p) (rsft lsft))
  .F#  (fork (tap-hold 1 $200 S-f (macro #))     (unshift f) (rsft lsft))
  .L?  (fork (tap-hold 1 $200 S-l (macro @.?))   (unshift l) (rsft lsft))
  .M\  (fork (tap-hold 1 $200 S-m (macro @.\))   (unshift m) (rsft lsft))
  .W$  (fork (tap-hold 1 $200 S-w (macro @.$))   (unshift w) (rsft lsft))
  .Q@  (fork (tap-hold 1 $200 S-q (macro @.@))   (unshift q) (rsft lsft))
  .O'  (fork (tap-hold 1 $200 S-o (macro @.'))   (unshift o) (rsft lsft))
  .D/  (fork (tap-hold 1 $200 S-d (macro @./))   (unshift d) (rsft lsft))
  .N   (fork (tap-hold 1 $200 S-n (macro -))     (unshift n) (rsft lsft))
  .R   (fork (tap-hold 1 $200 S-r (macro @._))   (unshift r) (rsft lsft))
  .Hâ  (fork (tap-hold 1 $200 S-h (macro S-.))   (unshift h) (rsft lsft))
  .Y`  (fork (tap-hold 1 $200 (unicode Y) (unicode Â´)) (unshift $y) (rsft lsft))
  .J%  (fork (tap-hold 1 $200 S-j (macro @.%))   (unshift j) (rsft lsft))
  .ÃË  (fork (tap-hold 1 $200 S-Ã¼ (macro S-2))   (unshift Ã¼) (rsft lsft))
  .X{  (fork (tap-hold 1 $200 S-x (unicode {))   (unshift x) (rsft lsft))
  .Ã}  (fork (tap-hold 1 $200 S-Ã¤ (macro @.}))   (unshift Ã¤) (rsft lsft))
  .Ã+  (fork (tap-hold 1 $200 S-Ã¶ (macro @.+))   (unshift Ã¶) (rsft lsft))
  .B=  (fork (tap-hold 1 $200 S-b (macro @.=))   (unshift b) (rsft lsft))
  .G*  (fork (tap-hold 1 $200 S-g (macro @.*))   (unshift g) (rsft lsft))
)

;;***  NUMBERS   ***
(defalias
  .ââ¡ (switch
		(lctl rctl) y break
		() C-bspc break
  )
;; @.7v ,:x .âc to enable copy paste
  _7v	(switch  ;; prefer paste = ctl+v on number layer over ctl+7
	      (lctl rctl) v break
	      () @_7 break
		)
  ,:x	(switch
			(lctl rctl) x break
			() (tap-hold  1 $600 , @.: ) break
		)
  -_:  (tap-hold  1 $100 (tap-dance $140 (/   (tap-hold 10 $100 (macro / /)  @.:) (tap-hold 10 $100 (macro / / /) /) )) (multi (macro @._) (tap-hold $200 $800 XX (macro bspc S-. ))) )

;; number layer home row mods
  .6â§ (tap-hold-release $200 $300 6 lsft)
  .5â (tap-hold-release $200 $300 5 lctl)
  .4â (tap-hold-release $200 $340 4 lalt)
  .âc (switch
		(lctl rctl) c break ;; perfer Copy over ctl+.
		() (tap-hold-release $200 $240 . lmet) break
	   )
  .â (tap-hold-release $200 $240 . lmet)
  .â0 (tap-hold-release $200 $340 0 lmet)  ;; BUG on QUERTY unused because of Win+G gets triggered on querty 
 
 ;; RI modifiers for numpad
  .ââ§ (tap-hold-release $200 5000 ret lsft)
  .â¡â (tap-hold $200 $200 del lctl) ;; BUG kanata mouse not working somtimes? TODO the DEL is not used here.  
  .lð°â (tap-hold-release $200 5000 @.ð°l lalt) ;; mouse lclick (TODO not used anymore) or alt
  .rð°â (tap-hold-release $200 5000 @.ð°r lmet) ;; mouse rclick (TODO not used anymore) or win 
)
(deflayer (numbers icon numbers.ico)
;;****************   NUMBERS   ****************************************************
;; TODO-Usage: caps to sym / C-bspc = @.ââ¡ or 7+8+9  
  esc _ _ _ _
  @.^       @.1    @.2    @.3   @.4   @.5     @.6   @.7   @.8   @.9   @.0    @.cmdrld  A-prnt _
  _         @-_:   1      2     3     @.ââ¡    esc   home  â²     end   pgup   pgdn      _      _
  @.atr     @.âc   @.4â   @.5â  @.6â§  0       bks    â    â¼     â¶     lmet   @.fkyn    _
  @.atp _   @,:x   @_7v   @_8   @_9   del     Tab   @.ââ§  @.â¡â  @.lð°â @.rð°â _
            _     _    _         _    _ ralt              
)
;; Exit numfix with CAPS or HOLD SPACE or HOLD Null or 7+9
(deflayer (numfix icon numfix.ico)
;;****************   NUMBERS(fix)   ********************************************************
;; Exit numfix with HOLD SPACE or HOLD Null or 7+9 or F13
;; INFO grv as dead key for Ã¢ Ã´, LEFT_Spacebar = 0
  esc       F1   @.ff13 _   F24
  grv       @.1   @.2   @.3   @.4   @.5    @.6  @.7   @.8    @.9   @.0     (layer-switch game) A-prnt _
  _         @-_:  1     2     3     @.ââ¡   home home  â²      end   pgup    pgdn      _       _
  @.sy1     @.âc  @.4â  @.5â  @.6â§  0      bspc  â    â¼      â¶     esc     @.fkyx    _
  _    _    @,:x  @_7   @_8   @_9   del    tab  @.ââ§  @.â¡â   @.lð°â @.rð°â  _
            _     _   (tap-hold  $200 $200 Digit0 @.basen)    (tap-hold  $200 $200 spc @.basen)  _ ralt                 
)

(defalias
;;**************** NUMBERSTAB or LEFT HAND COURSOR KEYS by Using aup *********************************************
  .aup  (on-press release-vkey alt)  ;; to exit the alt-tab dialog but stay in the layer 
  .eah (fork home (multi esc @.aup) (lalt))
  .eae (fork end  (multi esc @.aup) (lalt))
  .atxx (multi
			(layer-while-held numberstab)
			(on-press press-vkey alt )
			(on-press tap-vkey tab )
			(on-press tap-vkey tab )
			(on-release release-vkey alt )   
  ) 
  .atx (tap-hold $200 $150 (multi lalt tab) @.atxx ) ;; alt tab by hold caps
  .atr (multi @.numtab lalt (macro pgup) ) ;; atx for RDP
  .atm  (tap-dance $300 ( A-tab (macro A-( 10 tab 10 tab )) (macro A-( 10 tab 100 tab  100 tab )) (macro A-( 10 tab 100 tab 100 tab 100 tab )) ))
  .atp  (tap-dance $300 ( A-pgup (macro A-( 10 pgup 10 pgup )) (macro A-( 10 pgup 100 pgup  100 pgup )) (macro A-( 10 pgup 100 pgup 100 pgup 100 pgup )) )) ;;TODO try on RDP
  
  ;; alt tab number - (multi lalt tab tab ...) does not work anymore
  .at1 A-tab                                                                        ;;(multi lalt tab)
  .at2 (macro A-( 10 tab 100 tab ))                                                 ;;(multi lalt tab tab)
  .at3 (macro A-( 10 tab 100 tab 100 tab         ))                                 ;;(multi lalt tab tab tab)
  .at4 (macro A-( 10 tab 100 tab 100 tab 100 tab ))                                 ;;(multi lalt tab tab tab tab)
  .at5 (macro A-( 10 tab 100 tab 100 tab 100 tab  100 tab))                         ;;(multi lalt tab tab tab tab tab)
  .at6 (macro A-( 10 tab 100 tab 100 tab 100 tab  100 tab 100 tab))                 ;;(multi lalt tab tab tab tab tab tab)
  .at7 (macro A-( 10 tab 100 tab 100 tab 100 tab  100 tab 100 tab 100 tab))         ;;(multi lalt tab tab tab tab tab tab tab)
  .at8 (macro A-( 10 tab 100 tab 100 tab 100 tab  100 tab 100 tab 100 tab 100 tab)) ;;(multi lalt tab tab tab tab tab tab tab tab)
  .at9 (macro A-( 10 tab 100 tab 100 tab 100 tab  100 tab 100 tab 100 tab 100 tab 100 tab)) ;;(multi lalt tab tab tab tab tab tab tab tab tab)

)
(deflayer (numberstab icon numberstab.ico)
;;**************** NUMBERSTAB LEFT HAND COURSOR KEYS by Using aup ********************************************************
;; TODO How usefull are the esc Keys?
  esc _ _ _ _
  grv       1     2    3      4     5      6    7    8   9     0     -      Â´    bspc
  _         @.eah â²    @.eae  esc   @.ââ¡   home home â²   end   pgup  pgdn   _    _
  @.sy1     â     â¼    â¶      â¶     0      bspc â    â¼   â¶     esc   @.fkyx _
  _    _    @,:x  â¼    â¼      â¼     del    tab  @.ââ§ @.â¡â @.lð°â @.rð°â _
            _     _    _      _            _ ralt                      
)
(deflayer (symbols icon symbols.ico)
;;****************   SYSMBOLS (start typing fast or it will get switched to numbers)  ********************************************************
;; get to @.numfix by tapping <7> + <9> or <|> + <}>
;; t = Desktop switch
;; Â´ (S-Â´) as dead keys for Ã©, Ã¨,... not working with winiov2 or 1.8
  _ _ _ _ _
  _         @.at1  @.at2  @.at3  @.at4   @.at5    @.at6    @.at7    @.at8    @.at9   @.atm   @.cmdrld    A-prnt    _
  _         @.~    @.<    @.â    @.â     @.>      @.&      #        @.?      @.\     @.%     @.@         _         _         
  @.atr     @.`    @.^    @..[   @..]    @.'      @./      @.dsk    @..-     @._     esc     @.â¬         _             
  _    _    Â´      @_|    @.{    @_}     @.+      @.=      @.*      @.Ë      @.$     @.!     _               
            _      _             _                esc               _ ralt    
)
(deflayer vsymbols ;; unused - symbols reached by hold of querty-v macro and symbols triggered from the LEFT side - not used on V10 and not complete (unicode Ã)... are for ahk integration
  _ _ _ _ _
  _         _    _    _    _    _    _    _    _    _    _   _    _    _   
  _  (unicode Ã) @.Ë   @.â   @.â   @.$   @.&   #    @.?   @.\   @.%   _    _    _         
  _  (unicode Ã) @.@   @.[   @.]   @.'   @./   S-.  ,    .    @-_~ -    _          
  _     _   Â´    @.|   @.{   @.}   @.+   @.=   @.*   @.<   @.>   ^    _               
            _    _     _           _           _ ralt
)
(deflayer (numberline icon numberline.ico)
;;***   Numberrow *** Functionrow *** Keypadrow  *** dynamic-macro *** TODO-Usage
  esc _ _ _ _
  esc      @.dp1 @.dp2  @.dp3 @.dp4  @.dp5 @.dr1 @.dr2 @.dr3 @.dr4 @.dr5 @.dst @.dms bspc
  _        F1    F2     F3    F4     F5    F6    F7    F8    F9    F10   F11   F12   @.rtw
  _        @.k1  @.k2   @.k3  @.k4   @.k5  @.k6  @.k7  @.k8  @.k9  @.k0  esc   ret
  @.cabs _ @.p&  @.j%   @.v!  @.Ã¤}   @.Ã¶+  @.b=  @.g*  @,;>  @.:<  @-_~  @.rsf
           _     _      _     (multi spc @.basen)      @.basen ralt
)
(deflayer (fkeymacro icon fkeymacro.ico);; macro F-keys and (symbols) triggered from the RIGHT side (ff13) or fixed from numbers
;;****************   MACRO   ********************************************************
;; b is on this layer to avoid typos 4      5        6      7       8
  _ _ _ _ _
  _         @.geb @.fashing @.iban  @.plz   _        M-tab  M-tab   _       _    _    _    _    _
  _         @.cmdde   F1   F2   F3   F10    C-S-F5   C-S-f  @.tsc   @.\     #    _    _    _         
  @.sy1     @.cmdiso  F4   F5   F6   F11    lmet     lsft   lctl    lalt    lmet _    _          
  _    _    Â´         F7   F8   F9   F12    b        lctl   lalt    C-S-f   ^    _            
            _         _    _         _               _ ralt
)
(deflayer (mousefast icon mousefast.ico)
;;****************   MOUSE FAST  ********************************************************
  esc _ _ _ _
  ^        1     2     3     4      5     6        7   	    8      9		 0    -    Â´   bspc
  tab      @.%%% @.slw @.sl% @.sl%  @.sl% @.setu   @.cll	@.ð°âââ @.clr	 z    q    +   @.mus+
  caps     XX    @.clm @.clr @.cll  XX    @.set    @.ð°âââ	@.ð°âââ @.ð°âââ	 h    k    ret
  lsft  _  @.msz lalt  lctl  lsft   XX    @.setd   @.ð°â     @.ð°â   @.ð°â	 @-_: rsft
           lmet  lalt  @.clr                       @.cll     _ ralt                           
)
(deflayer (mouse icon mouse.ico)
;;****************   MOUSE   ********************************************************
  esc _ _ _ _
  ^        1     2     3     4      5     6        	7   	8     9		 0    -    Â´    bspc
  tab      @.%%% @.slw @.sl% @.sl%  @.sl% @.basecm 	@.cll	@.ð°ââ @.clr	 z    q    +    @.mus+
  caps     XX    @.clm @.clr @.cll  XX    @.set    	@.ð°ââ	@.ð°ââ @.ð°ââ	 h    k    ret
  lsft  _  @.msz lalt  lctl  lsft   XX    @.ð°â     	@.ð°â	@.ð°â  @.ð°â	 @-_: rsft
           lmet  lalt  @.clr                     	@.cll   _ ralt                           
)
(deflayer (mouseslow icon mouseslow.ico)
;;****************   MOUSE SLOW  ********************************************************
  esc _ _ _ _
  ^         1     2      3      4      5     6        	7     	8   	9     	0		-    Â´    bspc
  tab       @.%%% @.slw+ @.slw+ @.slw+ @.sl% @.basecm 	@.cll 	@.ð°â	@.clr 	z    	q    +    @.mus
  caps      XX    @.clm  @.clr  @.cll  XX    @.set    	@.ð°â  	@.ð°â	@.ð°â  	h    	k    ret
  lsft  _   @.msz lalt   lctl   lsft   XX    @.ð°â+    	@.ð°â+ 	@.ð°â+	@.ð°â+ 	@-_: 	rsft
            lmet  lalt   @.clr       @.cll             	_ ralt
)
(deflayer (mouseextraslow icon mouseextraslow.ico)
;;****************   MOUSE EXTRA SLOW  ********************************************************
  esc _ _ _ _
  ^         1     2      3      4      5    	6        	7    	8    	9     	0    -    Â´    bspc
  tab       @.%%% @.slw+ @.slw+ @.slw+ @.sl% 	@.basecm 	@.cll	@.ð°â+	@.clr 	z    q    +    @.mus
  caps      XX    @.clm  @.clr  @.cll  XX   	@.set    	@.ð°â+	@.ð°â+	@.ð°â+ 	h    k    ret
  lsft  _   @.msz lalt   lctl   lsft   XX   	@.ð°â    	@.ð°â+	@.ð°â+	@.ð°â+ 	@-_: rsft
            lmet  lalt   @.clr       @.cll              	_ ralt
)
;; mouse layer keys
(defalias
  .basecm (multi @.basen  A-C-M-p) ;; clear akh mouse highlight
  .mus+ (multi (layer-switch mousefast) (on-release tap-vkey mouselight)) ;; powertoys mouse spotlight
  .mus  (multi (layer-switch mouse    ) (on-release tap-vkey mouselight))
  .ff16 (tap-dance-eager $150 (
			XX
            (tap-hold  $200 $200 @.mus+ XX) ;; holding activates QMK mouse
	    ))
  .slw (layer-while-held mouseslow)
  .slw+ (layer-while-held mouseextraslow)
  .sl% (movemouse-speed 20)
  .s%% (movemouse-speed 20)
  .%%% (movemouse-speed 6)
  .set  (multi (setmouse 18228 32228) (on-release tap-vkey mouselight ))
  .setu (multi (setmouse 18228 16228) (on-release tap-vkey mouselight ))
  .setd (multi (setmouse 18228 48228) (on-release tap-vkey mouselight ))

;; idea: first mouse move in any direction fast than automaticly slower (but this requires 4 vkeys or 4+3+2+1 layers)
  .ð°â (multi (movemouse-up 9 3) (on-release tap-vkey mouselight ))
  .ð°â (multi (movemouse-left 9 3) (on-release tap-vkey mouselight ))
  .ð°â (multi (movemouse-down 9 3) (on-release tap-vkey mouselight ))
  .ð°â (multi (movemouse-right 9 3) (on-release tap-vkey mouselight ))
  
  .ð°â+ (movemouse-up 9 1)
  .ð°â+ (movemouse-left 9 1)
  .ð°â+ (movemouse-down 9 1)
  .ð°â+ (movemouse-right 9  1)

  .ð°ââ (movemouse-accel-up 3 1000 1 9)
  .ð°ââ (movemouse-accel-left 3 1000 1 9)
  .ð°ââ (movemouse-accel-down 3 1000 1 9)
  .ð°ââ (movemouse-accel-right 3 1000 1 9)
  
  .ð°âââ (multi (movemouse-accel-up    1 1000 1 9) (on-release tap-vkey mouselight ))
  .ð°âââ (multi (movemouse-accel-left  1 1000 1 9) (on-release tap-vkey mouselight ) (layer-switch mouseslow))
  .ð°âââ        (movemouse-accel-down  1 1000 1 5)
  .ð°âââ (multi (movemouse-accel-right 1 1000 1 5) (on-release tap-vkey mouselight ) (layer-switch mouseslow))
  
  
  .cll (multi @.basen @.ð°l A-C-M-p)
  .clr (multi @.basen @.ð°r A-C-M-p)
  .clm (multi @.basen @.ð°m A-C-M-p)
  
  .msz @.basen ;; this exit may not needed
  ;;TODO Double Click is missing
)

(defalias  
  ;; macros
  .del2  (macro bspc rpt) 
  .fashing (macro Digit1 Digit1 . Digit1 Digit1 . Digit2 Digit0 Digit2 Digit5 ) ;; 11.11.2025
  .geb (macro Digit2 Digit1 . Digit1 Digit2 . Digit2 Digit0 Digit0 Digit1 )
  .iban (macro S-d  S-e  Digit2 Digit0 Digit3 Digit7 Digit0 Digit1 Digit0 Digit0 Digit5 Digit0 Digit0 Digit0 Digit0 Digit4 Digit4 Digit5 Digit0 Digit5 Digit0 Digit7 )
  .plz (macro Digit6 Digit4 Digit7 Digit1 Digit1 )
  .tsc (macro @.\ @.\ t s c l i e n t @.\ c @.\ )

 
  ;; *** Kanata-HOTSTRINGS *** unused but could be used as replacement for ahk or espanso
  .swh (switch
    ((key-history Â´ 1))  (fork (macro (unicode Ã©) F17) (macro (unicode Ã) F17) (lsft rsft)) break ;; F17 just for key consumption
  	((and (key-history d 2) (key-history t 1 ))) (multi  bspc rpt @.fashing) break
  	((and (key-history j 2) (key-history u 1 ))) (macro  j spc n o t spc m a t t e r s ) break
  	((and (key-history x 2) (key-history v 1 ))) (macro  x spc n o t spc m a t t e r s ) break
	((and (key-history p 1 ) lsft)) (macro   spc f i r s t ) break ;; do hold-Shift + tap-p 
	((key-history lsft 2)(key-history , 1)) (macro spc s e c o n d) break ;; this is OR joint... 
  	((key-history , 1)) (macro  k o m m a) break ;; ... never reached 
  	((key-history < 1)) (macro  l e f t <) break ;; this is repeatable, because the trigger is at the end
    () XX break
  )

;; DATES
  .psiso (cmd-output-keys powershell.exe -NoProfile -NoLogo -NonInteractive -Command r#"echo "(" ((Get-Date -Format "yyyy-MM-dd").toCharArray() -join " ") ")""#)
  .cmdspeak (cmd speak.cmd)
  .saynothing (cmd powershell.exe -NoProfile -NoLogo -NonInteractive -Command r#"Add-Type -AssemblyName System.Speech; (New-Object System.Speech.Synthesis.SpeechSynthesizer).Speak('nothing')"#)
  .cmdrld (multi (cmd test.cmd) lrld-next)   
  ;;.cmdiso (cmd-output-keys timek.cmd) ;; shell not needed (cmd-output-keys cmd.exe /C timek.cmd)
  .cmdiso (cmd AutoHotkey dtiso.ah2)
  .cmdde  (cmd-output-keys r#"C:\path\kmonad\timedek.cmd"#)  ;; r#"start "" /MIN C:\path\kmonad\timedek.cmd"#
 )