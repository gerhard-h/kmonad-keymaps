#|
2023-10-23 16:22 restart Ei Au 
2023-10-24 no effect autohotkey espanso maybe effect citrix? powertoys?
BUG hanging ctrl key with AHK and RDP
 idea: add "lctl lctl" to desktop swap makro (didn't work)
 idea: (implemented): DON'T map G-Shift on Mouse
 idea: (implemented): AHK funtionality to swap desktops without pressing ctl currently (multi lmet lalt ß)
 idea: deactivate autohotkey (to see if the problem persists) but than desktop cycling won't work 
 
***** ALT-Tab **************************
 caps-tap 	= alt-tab x1
 caps-hold 	= WASD alt-tab selection 
 J/Q 		= depress ALT to have WASD cursor keys
 A/E		= ESC to exit dialog
 shift caps = S-alt-tab = Cycle though all windows backward (all desktops)
 Lspace caps= RDP replace tab with pgup
 ctl caps 	= keep selection screen open
*****************************************
INFO caps Layer toggle with numlock indicator = shift + Lspace (AltGr / LShift / Macorlayer will all exit)
****************** Autosymbol ************************
Autosymbol Repeat: TAP_HOLD x TAP x -> xx  d__ d -> //  ,___ . -> < >
Autosymbol DBL-tap-Hold: rare usage on , -> < and . -> >
Autosymbol Longhold (reconsider)
SHIFT + ,. are never used and could be mapped to - and /
*****************************************
TODO F24 + E/I :: not used / don't work consistent 
TODO Numbers + Ö = DEL not used
INFO V + Ü = DEL
INFO G + , = ESC
INFO , + . = F24
TODO Numberrow - not used
INFO Lspace + S = ^

;; FEATURES kanata                versus                 QMK                                              QMK minimal portable requirements
;; - Home row mods                                       (Y) but timing problems                          Fallback abc layer (Fallback = no kanata available)
;; - Autosymbol: Tap_Hold                                 y TAP_HOLD / MOD_TAP                            Fallback abc (but not VIA) => Fallback Symbol layer
;; -(Autosymbol: NO Dbl_Tap_Hold on Shift)                n also timing issues
;; -(Autosymbol: Dbl_Tap_Hold ONLY for SLOW KEYS q,.)     Y for all non modifiers
;; - Autosymbol: Dbl_Tap_Hold on non Shift modifiers      N                                               
;; -(Autosymbol: Dbl_Tap slowes Tap_Hold)				  Y no problem for non modifiers
;; - Autosymbol: Long_Hold                                N                                               
;; - Symbol layer (rarly used space + caps)               y                                               Fallback Symbol layer (with dedicated key)
;; - V-key Symbol layer (not used anymore)               (y) is possible  but maybe not needed             
;; - Nav/Number layer                                     y + sticky + dedicated layerkey                 Fallback number/nav layer (with SPACE)
;; - Shift fork layer                                    (y) tricky 
;; - one-shot layer (rarly used)                          y                                               
;; - one-shot shift,                                      y                                               
;; - alt tap otimization                                  ?												  map caps to ALT-Tab or SYSMBOLS
;; - F23 to Ahk Mouse layer								  y even better also with ahk highlight           *Mouse Layer
;; - F24 to Ahk hotkeys									  y												  ?
;; - leaderkey, wincompose and ahk integration           (y) no leaderkey but integrations still work
;; - AHK hotstring Problems                              (y) less AHK hotstring
;; - extra thumbkeys can be supported (F13+)              extra thumbkeys can be handeled directly (mouse)
;; - F-Keys as normal                                     F-Key layer                                     *F-Key layer 
;; - bspc on ö	 (not used anymore) 					  - on ö or - on , _on =
;; - rdesktop alt-pgup requires interception?             pgup can be remapped
;;
;; TODO Long Hold  might be anoying anyway
;; RETRY via newest version and skip fallback:  ctl win alt mouse F13 space F14 LFKey left down right
;;     space/numbers 
;; INFO wich thumb activates nav? cursor keys seems to be used with right tumb
;; BUG SC06F remap altgr to f24 in sharpkeys is not recognized by kanata
;; INFO use atx numtab for remote desktop -> atr (problem with non remappable keys -> solved by wintercept)
;; INFO double leader keying (multi f24 sldr) inconsistencies with sldr 
;; INFO sldr key not used
;; INFO AltGr is a bad positionend key anyway - bspc but not used 
;; TODO where to put delete? nav+B nav+h <- learn nav+h
;; INFO rpt just rpeats one key and no mods ... useless TODO rpt-any test
;; TODO revisit win and esc otimization / rsft - vs rsft esc  / @rtw vs esc_win
;; TODO ctrl + Z single key ? but no need
;; INFO combine @tab with esc feels bad

****** How to store status in local key (or F24) and query it with forks ******
(deflocalkeys-linux
  colemak_enabled 555
)

(deffakekeys
  colemak_enabled_helper colemak_enabled
)

(defalias
  tgl (fork
    (multi
      (layer-switch colemak)
      (on-press-fakekey colemak_enabled_helper press)
    )
    (multi
      (layer-switch qwerty)
      (release-key colemak_enabled)
      (on-press-fakekey colemak_enabled_helper release) 
    )
    (colemak_enabled)
  )
)
***
   INFO tap-dance-eager https://github.com/jtroo/kanata/issues/241 - does not make a big difference

   TIP dynamic macro support https://github.com/jtroo/kanata/issues/221
   TIP allow multiple sequence leaders, which can have different sequences with the same characters but different outputs
   ```
   (defalias
     ald (multi sldr (macro 1 a))
     bld (multi sldr (macro 1 b))
   )
   
   (defseq
     fake_key_a  (a c)
     fake_key_b  (b c)
   )
   ```
   This configuration would allow @ald followed by c and @bld followed by c to have different behaviour.
   
   TIP implement kombo while hiding sldr behind a normal key
   (deflayer default  grv  1    2    @s3  4    5    )
   (defalias three 3 )
   (deffakekeys
     fake_key_3 (macro o k a y S-1)
     fake_key_5 (macro o k a y S-1)
   )
   
   [***
   (defalias
     3ld (multi sldr (macro 1 @three))
     s3 (tap-hold 150 150 @three @3ld)
   )
   
   (defseq
     fake_key_3  (3 4)
     fake_key_5  (3 5)
   )
   This multi sldr does work, few issues though i) 3 loses key repeat, and ii) since it is leader style action, I cannot repeat it, for e.g. 3 & 4 without releasing 3 going for 5, will not trigger 3 & 5
   ***]
   
   TIP If you want instant activation on a tap-hold you could try do something like: (multi (macro a) (tap-hold 100 100 xx b))
   BUG one shot queueing seems to break after some time - like reloading ahk 
   BUG AltGr + I = ahk menu seems to hang CTRL - SOLVED by excluding AltGr (and Ctrls) from defsrc 	 
  
  ;; Swap numbers and their symbols with respect to shift
  ;; works, but no usecases :(
  (defoverrides
  (1) (lsft 1)
  (2) (lsft 2)
  ;; repeat for all remaining numbers

  (lsft 1) (1)
  (lsft 2) (2)
  ;; repeat for all remaining numbers
  ) 

  TEST 'mouse'  click with inception
  TEST Added: ensure all keys are released at the end of a dynamic macro 
  TEST like ,< use DBL-tap-Hold on more Long_Hold keys
|#
(defcfg
   sequence-timeout 3000
  ;; windows-interception-mouse-hwid "0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0"
  ;; windows-altgr cancel-lctl-press ;; remove the lctl press that comes as a combo with ralt  with F24 mapping
  ;; windows-altgr add-lctl-release  ;; add an lctl release when ralt is released           with standard Altgr 
  ;; windows don't map altgr to avoid both options from above 
  ;; NOTE: even with these workarounds, putting lctl+ralt in your defsrc may
  ;; not work too well with other applications that use WH_KEYBOARD_LL.
  ;; Known applications with issues: GWSL/VcXsrv

  ;; Using a binary compiled with the cmd feature enabled, uncomment below to
  ;; enable command execution:
  danger-enable-cmd yes
  ;;usecases for cmd: current date
  ;; process-unmapped-keys no ;; yes does not help with japanese keys ; did not help with RDP
  process-unmapped-keys yes ;; WHY WHY WHY seit Nov 23 wegen dynamic-macro?!
  ;; movemouse-smooth-diagonals yes
  
  ;; This configuration allows you to customize the length limit on dynamic macros.
  ;; The default limit is 128 keys.
  ;;
  dynamic-macro-max-presses 20
  
  ;; dynamic-macro-delay-between-replay-actions customizes the number of ticks
  ;; (approx 1ms) between each replay action of a dynamic macro. The default
  ;; value is 5. This may need to be increased if some state changes, e.g. a
  ;; layer change is not happening at the right time.
  ;; dynamic-macro-delay-between-replay-actions 5
  
)
;;(deflocalkeys-wintercept
;;  -    191
;;  ü    219
;;  +    221
;;  #    220
;;  ö    186
;;  ß    189
;;  ^    192
;;  ´    187
;;  ä    222
;;  <    226
;;  ;;- 555 custom numbers does not work with interception
;;)
(deflocalkeys-wintercept
  -    191
  ü    219
  +    221
  #    220
  ö    186
  ß    189
  ^    192
  ´    187
  ä    222
  <    226
  ;;- 555 custom numbers does not work with interception
)
(deffakekeys
  nosft_fk f22  ;; unused
  to-base (layer-switch base)
  fkcaps  (layer-while-held caps)
)
;;(deflocalkeys-win
;;  -    189
;;  ü    186
;;  +    187
;;  #    191
;;  ö    192
;;  ß    219
;;  ^    220
;;  ´    221
;;  ä    222
;;  <    226
;;)
(defalias
  ;; alias to cancel tap-hold keys if typing rapidly but restore after a shord idle period
  tp (multi
    (one-shot 95 (layer-toggle typing))
    (on-idle-fakekey to-base tap 95)
  )
  tpe (multi
    (one-shot 145 lsft)
  )
  ;; shifted german keys - every standard definition  as (macro) to disable autorepeate if the key is use on tap-hold
  ;; wintercept alias differences
  y z
  z y
  ' (macro S-# )
  + (macro + )
  * (macro S-+ )
  _  S--
  ;; AltGr german keys  
  ~ (macro RA-+ )
  ~~ RA-+             ;; tilde most likly do be used inside another macros
  | (macro RA-102d )
  } (macro RA-0 )   ;; C-A- works with rdp but C-A- 7 8 9 0 shortcuts must be deleted in windows terminal 
  { (macro RA-7 )
  ] (macro RA-9 )
  [ (macro RA-8 )
  \\ RA-ß             ;; single Backslash to be used inside of certain macros  
  \ (unicode \)       ;;(macro RA-ß )
  ẞ (macro RA-S-ß )
  € (unicode € ) ;;(macro RA-e )
  @ (unicode @ )
  ² (macro RA-2 )
  ³ (macro RA-3 )
  µ (macro RA-m )
  ! (macro S-1 )
  ˝ (macro S-2 )  ;; ˝ look-a-like is used because @" is no valid alias, to be displayed correctly in console requires a font that can - e.g. cascadia
  §	(macro S-3 )
  $	(macro S-4 )
  %	(macro S-5 )
  &	(macro S-6 )
  /	(macro S-7 )
  【	(macro S-8 )  ;; 【 look-a-like is used because @( is no valid alias, to be displayed correctly in console requires a font that can - e.g. cascadia
  】	(macro S-9 )  ;; 】 look-a-like is used because @) is no valid alias, to be displayed correctly in console requires a font that can - e.g. cascadia
  =	(macro S-0 )
  ? (macro S-ß )
  ; (macro S-, )
  : (macro S-. )
  > (macro S-102d )
  < (macro 102d  ) ;; not really needed but having @< and @> looks consistent
  ;; change dead keys in normal keys
  ´ (macro = spc)	  ;; ´ 
  ` (macro S-´ spc) ;;(unicode `)       ;; ` unicode also disables autorepeat
  ^ (unicode ^)       ;; ^ = \ - shifting (macro grv spc) will produce an incorrect space now: "° "
  ° S-grv
  , (macro ,)
  f20 (macro f20)
  f19 (macro f19)
  ä (macro ')
  ü (macro [)
  ö (macro ;) 
  ;; numlock on
  nly (cmd-output-keys powershell.exe "if ($([console]::NumberLock) -match 'True') { echo '()' } else { echo '(nlck)' }")
  ;; numlock off
  nln (cmd-output-keys powershell.exe "if ($([console]::NumberLock) -match 'True') { echo '(nlck)' } else { echo '()' }")
)

#|(defsrc querty laptop
  esc       f1   f13  f24
  ^         1    2    3    4    5    6    7    8    9    0    ß    ´    bspc
  tab       q    w    e    r    t    y    u    i    o    p    ü    +    #
  caps      a    s    d    f    g    h    j    k    l    ö    ä    ret
  lsft      z    x    c    v    b    n    m    ,    .    -    rsft
            lmet lalt      f14       spc            f15                           
) |#

;; defsrc for ansi german mine layout  
;; If you are looking for other keys, the file src/keys/mod.rs should hopefully provide some insight.
;; z and y are FLIPPED, positioning has no meaning but must be consistent with other layers
;; f1 unused / why is f24 declaration required? /   F13 = right-B  / F14 = left-Space
(defsrc
  esc       f1   f13  f24
  ^         1    2    3    4    5    6    7    8    9    0    +    ´    bspc
  tab       j    y    u    a    z    p    f    l    m    w    q    ß    #
  caps      c    s    i    e    o    d    t    n    r    h    k    ret
  lsft      x    v    ü    ä    ö    b    g    ,    .    -    rsft
            lmet lalt      f14       spc            f15                           
)

;; DON'T mess with the @u【 @a】 spacing 
;; INFO did lmet, lalt not being one-shot / not incluing lctl solve any problems? ANSWER didn't solve any problems
;; BUG rsft+rspace=@sym not used and has bugs with RAlt []{}...
;; feat: rpt will repeat the unmodified key / rpt-any fails to repeat complex tap-hold sequences
(deflayer base
;;****************   BASE   ********************************************************
;; TODO is @rtw / @x` / ever used?  / is @^ec used for esc?
;; TODO ONLY c s i n r h  have dbl_tap autorepeat
;; rsft+lspc = CAPSlayer / lspc+D = Desktop Cycle
;; F13 = right-B = macro & symbol layer (never used for symbols)
;; F14 = left-Space & symbol layer / lsft+F14 = number layer
;; ret hold does ctl via QMK
  esc       f1   @ff13 f24
  @^0        @1@  @2    @3`  @4    @5   @6   @7   @8   @9   @0 @dp1  @swh    bspc
  @tab      @j!  @z˝   @u【 @a】  @y$  @p&  @f#  @l?  @m\  @w%  @q@ ß  @rtw
  @atx      @cwn @s^   @i[  @e]   @o'  @d/  @t/   @n-  @r_   @hwn k    ret
  @osss     @x`  @cv|  @cü{ @cä}  @ö+  @b=  @g*  @,;< @.:>   @-_~ @rsfb
            @oml @oal  @ff14     @nav           @ff15   
#|
            lmet lalt           @nav
 CTRL + SPACE + ESC => Exit KANATA immediatly
 lspace + rspace = Enter  / AltGr = DEL      |#
)
;; *** Base layer variant that does not switch to fast typing layer used by RSFT ***
(deflayer notp
  esc       f1   @ff13 f24
  @^        @1@  @2    @3`  @4    @5   @6   @7   @8   @9   @0   -    del  bspc
  @tab      @j!  @!z˝   @u【 @!a】  @y$  @!p&  @!f#  @l?  @m\  @w%  @q@ @ß-  @rtw
  @atx      @cwn @!s    @!i[  @!e]   @o'  @d/  @!t   @!n   @r_  @hwn k  ret
  @oss      @x`  @cv| @ü{  @ä}   @ö+  @b=  @g*  @,;< @.:> @-_~ @rsf
            @oml @oal   @ff14         @nav           @ff15   
)
;; *** UPPER CASE LAYER - use spc to exit -  hold spc to exit w/o spc TODO shift into lower case does not work ***
(deflayer caps
  esc       f1   @ff13 f24
  @^        @1@  @2    @3`  @4    @5   @6   @7   @8   @9   @0   -    del  bspc
  @tab      @J  @Z˝   @U【 @A】  @Y$  @P&  @F#  @L?  @M\  @W%  @Q@  @ß- @rtw
  @atx      @CWN @S    @I[  @E]   @O'  @D/  @T   @N   @R   @HWN S-k  ret
  @scabs    @X`  @CHV| @Ü{  @Ä}   @Ö+  @B=  @G*  @,;< @.:> @-_~ @rsf
            @oml @oal  @ff14c      @nav           @ff15u   
)
;; *** UPPER CASE ALIAS ***
(defalias
;;cwlay (multi (layer-switch caps) @nly)
cwlayto (multi (on-press-fakekey fkcaps toggle) @nly) ;;using toggle to be more error redundant
cwlayout (multi (on-press-fakekey fkcaps release) @nln)
J   (fork (tap-hold 1 200 S-j @!) (unshift j) (rsft lsft))
Z˝  (fork (tap-hold 1 200 (unicode Z) @˝) (unshift z) (rsft lsft))
U【  (fork (tap-hold 1 200 S-u @【) (unshift u) (rsft lsft))
A】  (fork (tap-hold 1 200 S-a @】) (unshift a) (rsft lsft))
Y$  (switch
		(rsft lsft) (unshift z) 		break
		(rctl lctl) (unshift z)			break
		() 	(tap-hold 1 200 (unicode Y) @$)	break
)
P&  (fork (tap-hold 1 200 S-p @&) (unshift p) (rsft lsft))
F#  (fork (tap-hold 1 200 S-f #) (unshift f) (rsft lsft))
L?  (fork (tap-hold 1 200 S-l @?) (unshift l) (rsft lsft))
M\  (fork (tap-hold 1 200 S-m @\) (unshift m) (rsft lsft))
W%  (fork (tap-hold 1 200 S-w @%) (unshift w) (rsft lsft))
Q@  (fork (tap-hold 1 200 S-q @@) (unshift q) (rsft lsft))
CWN (switch
		(rsft lsft) (unshift c) 			break
		(rctl lctl) (unshift c)				break
		() 			(tap-hold 1 200 S-c @`)	break
)
S   (fork (tap-hold 1 200 S-s @^) (unshift s) (rsft lsft))
I[  (fork (tap-hold 1 200 S-i @[) (unshift i) (rsft lsft))
E]  (switch
        (rsft)  (tap-hold 1 200 (unshift e) (layer-switch base) ) break
        ()  (tap-hold 1 200 S-e lsft) break 
     )
O'  (fork (tap-hold 1 200 S-o @') (unshift o) (rsft lsft))
D/  (fork (tap-hold 1 200 S-d @/) (unshift d) (rsft lsft))
T   (switch
        (lsft)  (tap-hold 1 200 (unshift t) (layer-switch base) ) break
        ()  (tap-hold 1 200 S-t rsft) break 
     )
N   (fork (tap-hold 1 200 S-n -) (unshift n) (rsft lsft))
R   (fork (tap-hold 1 200 S-r @_) (unshift r) (rsft lsft))
HWN (fork (tap-hold 1 200 S-h S-.) (unshift h) (rsft lsft))
X`  (fork (tap-hold 1 200 S-x ´) (unshift x) (rsft lsft))
CHV| (fork (tap-hold 1 200 S-v @|) (unshift v) (rsft lsft))
Ü{  (fork (tap-hold 1 200 S-ü @{) (unshift ü) (rsft lsft))
Ä}  (fork (tap-hold 1 200 S-ä @}) (unshift ä) (rsft lsft))
Ö+  (fork (tap-hold 1 200 S-ö @+) (unshift ö) (rsft lsft))
B=  (fork (tap-hold 1 200 S-b @=) (unshift b) (rsft lsft))
G*  (fork (tap-hold 1 200 S-g @*) (unshift g) (rsft lsft))
)
;; *** fast Typing layer - prevents Upper Case within words when typing fast ***
;; unmod seems to solve RDP issues
(deflayer typing
;;****************   typing   ********************************************************
  esc       f1   @ff13  f24
  @^        @1@             @2              @3`           @4             @5             @6             @7             @8             @9             @0            -             del  bspc
  @tab      (unmod   j)    (unmod   z)     (unmod u)    (unmod   a)   (unmod   y)    (unmod   p)    (unmod   f)    (unmod   l)    (unmod   m)    (unmod   w)   (unmod   q) (unmod ß) @rtw
  @atx      (unmod   c)    (unmod   s)     (unmod   i)    (unmod   e)   (unmod   o)    (unmod   d)    (unmod   t)    (unmod   n)    (unmod   r)    (unmod   h) (unmod   k)      ret
  @osss     (unmod   v)    (unmod   x)     @ü{            @ä}           @ö+            (unmod   b)    (unmod   g)     @,;<           @.:>          @-_~          @rsf
            lmet            lalt           @ff14         @nav-typing   @ff15              
)
(defalias
 fast_f  (fork (unicode f) f (lsft rsft lctl rctl lalt ralt lmet rmet)) ;; not really needed TODO implement f17 trick for Fl
 delw (switch
	(lctl rctl) @y break
	() C-bspc break
 )
 ;; @8v @7x
 8v (switch
	(lctl rctl) v break
	() 8 break
 )
 ,:x (switch
	(lctl rctl) x break
	() (tap-hold  1 600 , @: ) break
 )
 c.wn (switch
	(lctl rctl) c break
	() (tap-hold-release 200 240 . lmet) break
 )
)
(deflayer numbers
;;****************   NUMBERS   ****************************************************
;; TODO caps to sym / C-bspc / at1 - at9 RDESK / atm  / A-prtsc / @fky never used!
;; TODO F14 space to DEL ever used?  h = del or h = esc
;; TEST atx with RDP
  esc       f1   @ff13 f24
  @^        @at1  @at2 @at3 @at4 @at5 @at6 @at7 @at8  @at9 @atm lrld-next A-prtsc _
  _         @-_:  1    2    3   @delw esc  home up    end  pgup pgdn      _       _
  @sy1      @c.wn @al4 @ct5 @sf6 0    bspc left down  rght esc  @fky      _
  _         @,:x   7    8    9    del  tab  @srt @cde  @alc @mrc _
            _     _    _         _    @ff15              
)
;; keypad alternativ TODO test usage
(deflayer numberline
;;****************   Numberrow Functionrow Keypadrow  ********************************************************
  esc       f1   @ff13 f24
;;  @^ec      kp1  kp2   kp3  kp4   kp5  kp6  kp7  kp8  kp9  kp0  f11   f12 bspc
 @^ec      @dp1  @dp2   @dp3  @dp4   @dp5  @dr1  @dr2   @dr3  @dr4   @dr5  @dst   @dms bspc

  @tab      f1   f2    f3   f4    f5   f6   f7   f8   f9   f10  f11   f12 @rtw
  @atx      @l1  @l2   @l3  @l4   @l5  @l6  @l7  @l8  @l9  @l0  esc   ret
  @oss      @x`  @cv|  @ü{  @ä}   @ö+  @b=  @g*  @,;< @.:> @-_~ @rsf
            @oml @oal  @ff14      (multi spc @que)          @que
)
;; setting fakekeys for numberstab
(deffakekeys
  ctl lctl
  sft lsft
  met lmet
  alt lalt
  tabb tab
)

(defalias
;;**************** LEFT HAND COURSOR KEYS by Using aup *********************************************
  aup  (on-press-fakekey alt release)  ;; to exit the alt-tab dialog but stay in the layer 

;; @fbs and @ret22 are reference examples for how to release a fakekey - but not used currently
  fbs  (multi
		(on-press-fakekey nosft_fk release)
		bspc
  )
  ret22 (multi
		(on-press-fakekey nosft_fk release)
		ret
  )

  dsk (multi lmet lalt ß)  ;; AHK desktop switch must use MODS to be active within RDP  SYMBOL+M 
  
  atxx 	(multi
    (layer-toggle numberstab)
    (on-press-fakekey alt press)
    ;;(on-press-fakekey-delay 50)
    (on-press-fakekey tabb tap)
    (on-press-fakekey tabb tap)
    ;;(on-release-fakekey-delay 50)
    (on-release-fakekey alt release)   
  )

)
(deflayer numberstab
;;****************   LEFT HAND COURSOR KEYS by Using aup   ********************************************************
;; TODO How usefull are the esc Keys?
  esc       f1   @ff13 f24
  grv       1    2     3     4     5      6    7    8    9    0    -    ´    bspc
  _         @aup up    esc   esc   @delw  esc  home up   end  pgup pgdn      _       _
  @sy1      left down  rght  rght  0      bspc left down rght esc @fky      _
  _         @,:  down  down  down  del    tab  @srt @cde @alc @mrc _
            _     _    @ff14       _             @ff15                      
)
  ;; Exit numfix with CAPS or HOLD SPACE or 7+9
(deflayer numfix
;;****************   NUMBERS(fix)   ********************************************************^a^^^
  esc       f1   @ff13 f24
  grv        @at1  @at2 @at3 @at4 @at5 @at6 @at7 @at8  @at9 @atm lrld-next A-prtsc _
  _         @-_:  1    2    3  @delw  esc  home up    end  pgup pgdn      _       _
  @quen     @.wn  @al4 @ct5 @sf6 0    bspc left down  rght esc @fky      _
  _         @,:   @ch7 8    @ch9 del  tab  @srt @cde  @alc @mrc _
            _     _   (tap-hold  200 200 @0 @quen)    (tap-hold  200 200 spc @quen)  _                 
)
(deflayer symbols
;;****************   SYSMBOLS   ********************************************************
;; @numfix by tap 7+9 / |+} and release space
  _         f1    @ff13 f24
  _         @at1  @at2  @at3  @at4   @at5    @at6    @at7    @at8    @at9    @atm    lrld-next    A-prtsc    _
  _         @!    @˝    @【   @】    @$      @&      #       @?      @\      @%      @@           _          _         
  @atr      @`    @^    @![   @]f    @'      S-7     @dsk    @!-     @_      esc   @€           _             
  _         ´     @ch|  @{    @ch}   @+      @=      @*      @<      @>      @~      _               
            _     _           @ff14       bspc                     @ff15   
)
(deflayer vsymbols ;; macro and symbols triggered from the LEFT side - not used on v20 and not complete (unicode Õ)... are for ahk integration
  _         f1   @ff13 f24
  _         _    _    _    _    _    _    _    _    _    _   _    _    _   
  _  (unicode Ù) @˝   @【   @】   @$   @&   #    @?   @\   @%   _    _    _         
  _  (unicode Õ) @@   @[   @]   @'   @/   S-.  ,    .    @-_~ -    _          
  _         ´    @|   @{   @}   @+   @=   @*   @<   @>   ^    _               
            _    _      @ff14        _              _
)
(deflayer ksymbols ;; macro F-keys and (symbols) triggered from the RIGHT side (ff13)
;;****************   MACRO   ********************************************************
  _         f1   @ff13    f24
  _         @fashing @geb @iban  @plz _    _     _    _    _       _    _    _    _
  _         @cmdde   f1   f2   f3   f10   C-S-f5 C-S-f @tsc   @\   #    _    _    _         
  _         @cmdiso  f4   f5   f6   f11    lmet  lsft lctl lalt    @-_~ _    _          
  _         ´        f7   f8   f9   f12    b lctl lalt C-S-f   ^    _            
            _        _    @ff14     _            _
)
(deflayer fkeys ;;triggered with ß from numbers
;;****************   F KEYS   ********************************************************
  esc       f1   @ff13    f24
  @^ec      @1@  @2   @3`  @4   @5   @6   @7   @8    @9   @0   @sz  sldr bspc
  _         @-_: f1   f2   f3   f10  esc  home up    end  pgup pgdn _    _    
  @sy1      @.wn f4   f5   f6   f11  lmet lsft lctl  lalt lmet _    _ 
  _         @,   f7   f8   f9   f12  tab  @srt @cde  @alc @mrc _
       _    _    @ff14      _                  _           
)
;; TODO should mouse layer contain numpad? using QMK Mouse curreently
(deflayer mouse
;;****************   MOUSE   ********************************************************
  esc       f1   @ff13    f24
  ^         1    2    3    4    5    6    7    8    9    0    -    ´    bspc
  tab       XX   @slw @slw @slw XX  @quep @cll @ma↑ @clr z    q    +    #
  caps      XX   @clm @clr @cll XX   h    @ma← @ma↓ @ma→ h    ß    ret
  lsft      @msz lalt lctl lsft XX   @ms← @ms↑ @ms↓ @ms→ k    rsft
            lmet lalt  @ff14    @quep              _                           
)
(deflayer mouseslow
;;****************   MOUSE   ********************************************************
  esc       f1   @ff13     f24
  ^         1    2    3    4    5    6    7    8    9    0    -    ´    bspc
  tab       XX   @slw @slw @slw XX  @quep @cll @ms↑ @clr z    q    +    #
  caps      XX   @clm @clr @cll XX   h    @ms← @ms↓ @ms→ h    ß    ret
  lsft      @msz lalt lctl lsft XX   @ms← @ms↑ @ms↓ @ms→ k    rsft
            lmet lalt   @ff14   @quep              _
)
(defalias
  que (multi (layer-switch base) @nln)
  queh (layer-toggle base)
  quen (multi (layer-switch base) @nln)
  numfix (multi (layer-switch numfix) @nly)
  ff15u (tap-hold 1 200  @cwlayout (layer-toggle numberline))
  ff15 (tap-hold 1 200  (multi @nly (layer-switch numberline)) (layer-toggle numberline))
  chf  (chord fkomma g)  ;; F24
  ch,  (chord fkomma ,)  
  ch.  (chord fkomma .)  ;; Q alternative
  cv|  (chord xä v)		;; sticky numbers
  cä}  (chord xä ä)
  cü{  (chord xä ü)
  ch7  (chord exit79 7)	;; exit numbers
  ch9  (tap-hold 1 200 (chord exit79 9) @quen)
  ch|  (chord |} <)      ;; mods will be added later in defchord < is | 0 is }
  ch}  (tap-hold 1 200 (chord |} 0) (release-layer symbols)) ;; tap-hold to exit layer
  ]f   (tap-hold 1 200 @] (release-layer symbols)) 
)
;; from NUMFIX to BASE
(defchords exit79 20
  (7      ) 7
  (   9   ) 9
  (7  9   ) @quen
)
;; from BASE to NUMFIX  THis seems to be the principal way : put chord in layer and call alias here (it also keeps the aliases clean) 
(defchords xä 50
  (v      ) @v|
  (   ä   ) @ä}
  (v  ä   ) @numfix
  (     ü ) @ü{
  (v    ü ) del
)
;; from SYMBOLS to NUMFIX CA(0) = }  CA(<) = | chord must be defined on the not modified keys
(defchords |} 140
  (0      ) @}
  (   <   ) @|
  (0  <   ) @numfix
)
;; TODO F24 and ESC are not really used
(defchords fkomma 20
  (g       ) g
  (   ,    ) ,
  (g  ,    ) esc
  (      . ) .
  (   ,  . ) f24
)
;; mouse layer keys
(defalias
  mal mlft ;;M-C-A-f ;; using AHK to do the click
  mar mrgt ;;M-C-A-d
  mam mmid ;;M-C-A-s
  quep (multi @que  A-C-M-p)
  mus (layer-switch mouse)
  slw (layer-toggle mouseslow)
  
  ms↑ (movemouse-up 3 1)
  ms← (movemouse-left 3 1)
  ms↓ (movemouse-down 3 1)
  ms→ (movemouse-right 3 1)

  ma↑ (movemouse-accel-up 1 1000 1 5)
  ma← (movemouse-accel-left 1 1000 1 5)
  ma↓ (movemouse-accel-down 1 1000 1 5)
  ma→ (movemouse-accel-right 1 1000 1 5)
  
  cll (multi @que @mal A-C-M-p)
  clr (multi @que @mar A-C-M-p)
  clm (multi @que @mam A-C-M-p)
  
  ;; F23 (tap-hold 200 200 y (multi f24 sldr))  ;; works technically f24 triggers y itselft it must be hold for f24 ... feels bad
  yms (tap-hold-release 200 200 z (multi @mus A-C-M-p) )
  msz (multi @que (macro z))
  msu (multi @que (macro u))
  mso (multi @que (macro o))
  ;;  msf (multi @que (macro mltp A-C-p))
  ;; msf (macro mlft 10 f17 100 lrld)
  msf (multi mlft f17  lrld)
  msd (multi @que (macro d))
  mss (multi @que (macro s))
  ;;Double Click is missing
  
  ;; mouse layer keys end 
)

(defalias  
;; *** LAYER-TOGGLE & SWITCH-LAYER(STICKYNESS) ***
  num (layer-toggle numbers)
  numtab (layer-toggle numberstab)
  sym (layer-toggle symbols)
  syv (one-shot 2000 (layer-toggle vsymbols))
  syvv (layer-toggle vsymbols)
  sy1 (one-shot 2000 (layer-toggle symbols))
  syk (layer-toggle ksymbols)
  fky (layer-toggle fkeys)
;; *** CAPS WORDS ***
  cwd (caps-word-custom 2000 
		(a b c d e f g h i j k l m n o p q r s t u v w x y z ä ü ö)
	    (1 2 3 bspc del up down left rght rsft -) ;; rsft must be exluded as they are used for triggering caps words
  )
  cwl (caps-word-custom 2000 
		(a b c d e f g h i j k l m n o p q r s t u v w x y z ä ü ö)
	    (1 2 3 bspc del up down left rght lsft -) ;; lsft must be exluded as they are used for triggering caps words
  )
;; *** ONE SHOT MODIFIERS ***
  oss (tap-hold 200 300 @cwl lsft) ;; use caps words on non base layer
  ossb (tap-hold 200 300 @cwlayto lsft)
  scabs (tap-hold 200 300 @cwlayout lsft)
  osss (one-shot 2000 lsft)
  ocl (one-shot 2000 lctl) 
  oal (one-shot 2000 lalt)
  oml (one-shot 2000 lmet)
  ;; F14 LEFT sft + LEFT spc == numbers
  ff14 (tap-hold  200 200 
        (multi	
		(fork 
			(fork 
			   ret
			   @cwlayto ;;@cwd
			   (rsft)
			)
			@cwlayto ;;@cwl
			(lsft)	
		) )
		(fork 
			(multi (layer-toggle numbers) (layer-toggle symbols))
			(layer-toggle numbers)
			(lsft)
	    )
  )
  ff14c (tap-hold  200 200 
        (multi	
		(fork 
			(fork 
			   ret
			   @cwlayout ;;@cwd
			   (rsft)
			)
			@cwlayout ;;@cwl
			(lsft)	
		) )
		(fork 
			(multi (layer-toggle numbers) (layer-toggle symbols))
			(layer-toggle numbers)
			(lsft)
	    )
  )
  ff13 (multi f21 (on-press-fakekey fkcaps release) (layer-switch base) @nln (layer-toggle ksymbols)) ;; MACRO+F-Keys TIP removing one-shot solves problems with hitting the key by accident - F21 is not used in ahk in just consumes a key press
  nav   (tap-hold  200 200 spc (fork @num @sym (rsft))) ;; RIGHT sft + RIGHT spc == symbols  
  nav-typing   (tap-hold  200 200 (multi @que spc) (fork @num @sym (rsft))) 
  ;; modifiers for numpad
  srt (tap-hold-release 200 5000 ret lsft)
  ;; cde  (multi @mus (macro f23)) lctl) ;; to trigger ahk mouse  or ctl
  ;; cde (tap-hold-release 200 5000 (multi @mus A-C-M-p) lctl) ;; to trigger kanata mouse layer & spotlight or ctl
  cde (tap-hold 200 200 del lctl) ;; kanata mouse not working with interception drivers
  alc (tap-hold-release 200 5000 @mal lalt) ;; mouse lclick or alt
  mrc (tap-hold-release 200 5000 @mar lmet) ;; mouse rclick or win

  ;; outer/special keys
  ech (tap-hold 140 400 esc (multi (macro home ) (tap-hold 400 900 XX (macro end ) )) ) ;; not used
  ^ec (tap-hold 200 300 esc @^)
  ^0 (tap-hold 200 300 0 @^)
  tab (tap-hold-press  200 400 tab lctl )	;; TODO is ctl ever used?
  rtc (tap-hold-release 200 5000 ret lctl)
  rtw del ;;(tap-hold-release 200 5000 ret lmet)
  rsd (tap-hold-release 200 240 @syv (multi rsft lsft)) ;; TODO not used ?! BUG rsft get ignored on RDesktop -> use lsft  or (multi rsft lsft) ?
  ral S-C-M-A-9 ;; release ALL key (BUG) kanata cannot release stuck keys from ahk (both tools with elevated rights) PRESS F24 FOR RELEASE ALL MODS
  
  ;; dynamic-macro TODO test them
  dr1 (dynamic-macro-record 1)
  dr2 (dynamic-macro-record 2)
  dr3 (dynamic-macro-record 3)
  dr4 (dynamic-macro-record 4)
  dr5 (dynamic-macro-record 5)
  dp1 (dynamic-macro-play 1)
  dp2 (dynamic-macro-play 2)
  dp3 (dynamic-macro-play 3)
  dp4 (dynamic-macro-play 4)
  dp5 (dynamic-macro-play 5)

  dms dynamic-macro-record-stop
  dst (dynamic-macro-record-stop-truncate 1)
  
  ;; alt tab - never used this - TODO try it on RDP
  at1 (multi lalt pgup)
  at2 (multi lalt pgup pgup)
  at3 (multi lalt pgup pgup pgup)
  at4 (multi lalt pgup pgup pgup pgup)
  at5 (multi lalt pgup pgup pgup pgup pgup)
  at6 (multi lalt pgup pgup pgup pgup pgup pgup)
  at7 (multi lalt pgup pgup pgup pgup pgup pgup pgup)
  at8 (multi lalt pgup pgup pgup pgup pgup pgup pgup pgup)
  at9 (multi lalt pgup pgup pgup pgup pgup pgup pgup pgup pgup)
  ;;at0 (tap-dance 500 (A-tab (macro f24 r) (macro f24 t) (macro f24 z)) ) old verion of atm
  aty (multi @numtab lalt (macro tab) ) ;; alt tab by dbl_tap-hold k
  atr (multi @numtab lalt (macro pgup) ) ;; atx for RDP
  atx (tap-hold 200 150 (multi lalt tab) @atxx ) ;; alt tab by hold caps
  ;;atm (tap-dance 700 (@at1 @at2 @at3 @at4) ) Sequence now works but is inferior to the number row mapping
  atm  (tap-dance 500 ( A-tab (macro A-(tab 90 tab )) (macro A-(tab 90 tab  90 tab )) (macro A-(tab 90 tab  90 tab  90 tab )) ))
  ;; not working on remote desktop atp  (tap-dance 500 ( (macro A-pgup) (macro A-(pgup 90 pgup )) (macro A-(pgup 90 pgup  90 pgup )) (macro A-(pgup 90 pgup  90 pgup  90 pgup )) ))

;; *** HOME ROW MODS *** 
;; e]	(multi
;;      (on-idle-fakekey nosft_fk release 222 )
;;      (tap-hold 1 160 (fork e f (lctl rctl)) lsft) 
;; )
;;  e] (tap-hold 1 160 (fork e f (lctl rctl)) lsft)
;; e] (tap-hold 1 160 (fork k (multi f @tp) (rsft)) lsft)
;; e] (multi f @tp)
;;;e] (tap-hold 1 160 (multi e @tp) lsft)
;; this LONG HOLD is delaying the Output of Uppercase letters -very bad tap-hold-press and tap-hold-release
;;e]  (tap-hold 1 160 (multi e @tp) (multi lsft (tap-hold 1 900 XX (layer-toggle notp))) ) ;; als erstes muss der Wechsel nach typing erfolgen sonst EIn 
;;t   (tap-hold 1 160 (multi t @tp) (multi rsft (tap-hold 1 900 XX (layer-toggle notp))) ) ;; rsft ,rctl have RDP problems without interception
;;TODO send i to Lowercase if e is Upper 
e]  (tap-hold 1 160 (fork e (multi e f17 @tpe) (rsft)) lsft ) ;;(tap-hold 1 160 (multi  @tp e) lsft ) ;; als erstes muss der Wechsel nach typing erfolgen sonst EIn 
t/   (tap-hold 1 160 (multi t @tp) rsft ) ;; rsft ,rctl have RDP problems without interception

!e]  (tap-hold 1 160 e lsft ) ;; als erstes muss der Wechsel nach typing erfolgen sonst EIn 
!t   (tap-hold 1 160 t rsft ) ;; rsft ,rctl have RDP problems without interception
;;n   (tap-hold-release 1 140 (fork n (unicode n) (rsft) )(one-shot 400 rsft) )
;;  n (tap-hold 1 160 
;;	(fork
;;	 n
;;	 (multi
;;	     (unicode n)
;;		 (on-press-fakekey nosft_fk release)
;;	 )
;;	 (f22)
;;	)
;;  rsft) ;; (fork n (unicode b) (rsft) ) rsft)  ;;(one-shot 500 rsft)) ;;(multi rsft lsft)) ;; this clean form avoids US -> Ujs bug when typing fast ;; BUG rsft has bugs on RDesktop multi fixes fjf->F but jfj->j stays
  
;; This FIXes for ei instead of are no longer needed I   
;;i[  (multi (on-press-fakekey nosft_fk press) (tap-hold 500 500 (fork i (macro (unicode e)(unicode i)) (lsft) ) lctl ) )
;;  i[  (multi                                 (tap-hold 500 500 (fork i (macro (unicode e)(unicode i)) (lsft) ) lctl ) ;;@tp ) ;; with unicode typing this is not longer necessary
i[  (multi (tap-hold 500 500 (fork i (unicode i) (f17)) (multi @queh lctl) ) @tp) 
!i[ (tap-hold 500 500 i lctl )
![ (tap-hold 500 500 @[ lctl ) ;; used on symbol layer
!- (tap-hold 500 500 - lctl )
 !n  (tap-hold 500 500 n rctl )    
 n-  (multi (tap-hold 500 500 n (multi @queh rctl) ) @tp)
 ;; Bug in no interception rctl+y  to start ditto, then ditto will not act on keyboard input 
 ;; also RDP ignores rctl DIFFERENCE to rsft is: rctl is missing in defsrc
 ;; but adding it will not solve the issue Enter will start the search
 
  s^ (multi  (tap-hold 1000 1000 s (multi @queh alt)) @tp)
  !s (tap-hold 1000 1000 s alt)
  hwn (tap-hold 350 1000 h lmet)
  ß-  (tap-hold 1 180 
		(switch
			((key-history - 1)) - break
			() ß break 
		)
		(switch
			((key-history - 1)) - break
			() (macro - ) break
		)
	  )                                                                                ;; ß = [
  cwn (tap-hold 1000 1000 c lmet)
  r_ (multi (tap-hold-release 450 1000 r (multi @queh lalt)) @tp)
  rsf (tap-hold-release 350 500 - rsft)
  rsfb (tap-hold-release 350 500 - (multi rsft (layer-toggle notp)))
  ;; number layer home row mods
  sf6 (tap-hold-release 200 300 6 lsft)
  ct5 (tap-hold-release 200 300 5 lctl)
  al4 (tap-hold-release 200 340 4 lalt)
  .wn (tap-hold-release 200 240 . lmet)
  wn0 (tap-hold-release 200 340 0 lmet)  ;; unused because of Win+G gets triggered 
  9sy (tap-hold-release 200 340 9 @syv)  ;; unused because v is already mapped to do this
  ;;ght (tap-hold-release 200 240 rght rmet)  ;;works but not used
  
  ;; number aliases (n0-n9 for use inside other macros)
  n1 1
  n2 2
  n3 3
  n4 4 
  n5 5 
  n6 6 
  n7 7 
  n8 8 
  n9 9 
  n0 0
  l1 (tap-hold 200 500 1 lmet)
  l2 (tap-hold 200 500 2 lalt)
  l3 (tap-hold 200 500 3 lctl)
  l4 (tap-hold 200 500 4 lsft)
  l5 (tap-hold 200 500 5 lmet)
  l6 (tap-hold 200 500 6 lmet)
  l7 (tap-hold 200 500 7 lsft)
  l8 (tap-hold 200 500 8 lctl)
  l9 (tap-hold 200 500 9 lalt)
  l0 (tap-hold 200 500 0 lmet)
  
  1@ (tap-hold 140 140 1 (multi (macro S-1 ) (tap-hold 200 400 XX (macro bspc @@ ))) )  
  2 (tap-hold 140 300 2 (multi @˝ (tap-hold 200 700 XX @˝ )) )
  ;; multi 3 3 because macro 3 3 is not working
;; 3` (tap-dance 140 ((tap-hold 10 100 3 (multi @` (tap-hold 200 400 XX (macro S-= S-=))  ))  (tap-hold 10 100 (multi 3 3) (macro S-= S-= S-= spc))))
  3` (tap-hold 140 300  3 (macro S-3 )) ;; §
  4 (tap-hold 200 500 4 (macro S-4 ))
  5 (tap-hold 200 500 5 (macro S-5 ))
  6 (tap-hold 200 500 6 (macro S-6 )) ;;(tap-hold 200 300 6 (multi (macro S-6 ) (tap-hold 200 400 XX (macro S-6 ))))
  7 (tap-hold 200 500 7 (macro S-7 )) ;;(tap-hold 200 300 7 (multi (macro S-7 ) (tap-hold 200 400 XX (macro S-7 ))))
  8 (tap-hold 200 500 8 (macro S-8 )) ;;(tap-hold 200 300 8 (multi (macro S-8 ) (tap-hold 200 400 XX (macro bspc RA-8 ))) )
  9 (tap-hold 200 500 9 (macro S-9 )) ;;(tap-hold 200 300 9 (multi (macro S-9 ) (tap-hold 200 400 XX (macro bspc RA-9 ))) )
  0 0 ;;(tap-hold 10 100 0 (multi (macro S-0 ) (tap-hold 200 400 XX (multi (macro S-0 ) (tap-hold 200 400 XX (macro S-0 ))  ))  ) )
  
  ;; normal keys
  sz (tap-hold 200 300 ß (multi (macro S-ß ) (tap-hold 200 500 XX (macro bspc RA-ß ))))
  ;; q (multi q sldr) eats the next key after q
  ;;q! (tap-hold 140 140 q (multi (macro S-1 ) (tap-hold 200 400 XX (macro bspc RA-q ))) )                 ;; q ! @
  ;;q! (tap-hold 1 140 q (macro-release-cancel S-1 600 bspc (unicode @) 800 bspc S-1 800 bspc))                   ;; q ! @
  ;;q! (tap-dance 120 ((tap-hold 1 90 q (multi (macro S-1 ) (tap-hold 200 600 XX (macro bspc (unicode @) ))) )  (unicode @)  (unicode ä) ) )
  ;;j!  (tap-hold 1 100 (tap-dance-eager 100 (j (fork (macro bspc @@) RA-q (lctl rctl)) )) (multi @! (tap-hold 200 600 XX (macro bspc @@ )))  ) ;; q ! @    Great! tapdance can be nested inside tap-hold. Still timing problems on keybr.com!
  j!  (tap-dance-eager 150 ((tap-hold 1 120 j (multi @! (tap-hold 200 800 XX (macro bspc @@ )))) (fork (macro bspc @@) RA-q (lctl rctl)) ))  
  z˝  (multi (tap-hold 1 140  @z (multi (macro S-2 ) (tap-hold 200 400 XX (macro S-2 ))) ) @tp)                         ;; " ""
  !z˝ (tap-hold 1 140 @z (multi (macro S-2 ) (tap-hold 200 400 XX (macro S-2 ))) )                         ;; " ""
  u【  (tap-hold 1 150 u (multi (macro S-8 ) (tap-hold 200 400 XX (macro S-9 ))))                           ;; (  ()
  ;; a】 (multi (tap-hold 1 150  a  S-9) @tp) this order works with powertoys    
  ;; but causes problems with RDP ua vs au
  a】 (multi (tap-hold 1 150  a  S-9) @tp)
  ;; a】  (tap-hold 1 150 a (macro S-9)) ;; causes AU when typing fast
  ;; a】 LONG HOLD no Powertoys(tap-hold 1 150 (multi a @tp) (fork (macro-release-cancel S-9 600 bspc RA-9 ) C-a (lctl rctl)) )                   ;; ) [ todo find a better use
  !a】 (tap-hold 1 150 a (fork (macro-release-cancel S-9 600 bspc RA-9 ) C-a (lctl rctl)) )                   ;; ) [ todo find a better use
  y$  (tap-hold 1 140 @y (macro S-4))
  p&  (tap-hold 1 160 (multi p @tp) (multi (macro S-6 ) (tap-hold 200 800 XX (macro S-6 ))))                          ;; & &&
  !p& (tap-hold 1 160 p (multi (macro S-6 ) (tap-hold 200 800 XX (macro S-6 ))))                          ;; & &&
  l?  (multi (tap-hold 1 140 (multi @queh l) (multi @? (tap-hold 200 500 XX @? ))) @tp)                                          ;; ? = S-[      i ? ??
;;k\  (tap-hold 1 140 k (multi @\ (tap-hold 200 800 XX @\ )) )  ;; fast reponsive
  m\  (multi (tap-hold  1 120 (multi @queh (tap-dance-eager 100 (m (tap-hold 1 260 (macro m) (macro bspc @\\ @\\)) (tap-hold 1 100 (macro m m) m) ))) (multi (macro @\\ ) (tap-hold 1 800 XX (macro @\\ ))) ) @tp)
  aä  (tap-hold 1 120 a (macro-release-cancel ä 400 bspc S-= spc 600 bspc ä 600 bspc a 600 bspc))            ;; ä = '  `=S-]
  f#  (multi (tap-hold 1 140 f (macro # )) @tp) 
  !f# (tap-hold 1 140 f  (macro # ))
  w%  (tap-hold 1 140 w (macro S-5 ))
  sß  (tap-hold 1 120 s (macro ß ) )                                                                               ;; ß = [
  q@  (tap-hold 1 120 q @@ ) 
  o'  (tap-hold 1 160 o (multi @' (tap-hold 200 800 XX @' )) )                         ;; ' ''
  d/  (tap-hold 1 200 
		(switch
			((and (key-history lsft 2)(key-history 7 1))) S-7 break
			() d break 
		)  
		(multi 	
			(macro S-7 ) 
				(tap-hold 180 800 XX 
					(macro S-7 )
			)
		) 
	  )
  v|  (tap-hold 1 120 
      (switch
			((and (key-history lsft 2)(key-history < 1))) v break
			((key-history < 1)) @| break
			() v break 
	  ) 
      (fork (multi @| (tap-hold 200 800 XX @| )) del (ü 7))  )   ;; | || not used
  x`  (tap-hold 1 160
	  (switch 
		((and (key-history spc 1)(key-history lsft 3)(key-history ´ 2)))  @` break
		() x break
	  )
	  (multi @` (tap-hold 200 800 XX @´ )) )
  ü{  (tap-hold 1 140 ü (fork (multi @{ (tap-hold 200 500 XX @} )) XX (x)))                      ;; { {}
  ;;ä}  (tap-hold-release-timeout 200 400 ä @syvv @} ) ;; not needed on v20 bc of second space bar
  ä}  (tap-hold 1 140 ä @} )
  ö+  (tap-hold 1 180 
	  (switch
			((and (key-history lsft 2)(key-history + 1))) ö break
			((key-history + 1)) @+ break
			() ö break 
	  )  
	  (multi @+ (tap-hold 220 500 XX @+ )))                              ;; + = =  b + ++
;;p=  (tap-hold 1 240 p (multi (macro S-0 ) (tap-hold 200 400 XX (multi (macro S-0 ) (tap-hold 200 1000 XX (macro S-0 ))  ))) ) ;; p = == === 
;;b=  (tap-hold 1 180 (tap-dance-eager 180 (b (tap-hold 1 180 (macro b) (multi (macro bspc S-0 S-0) (tap-hold 260 600 XX (macro S-0 )))) (tap-hold 1 180 (macro b b) b) )) (multi (macro S-0 ) (tap-hold 260 400 XX (multi (macro S-0 ) (tap-hold 260 800 XX (macro S-0 ))  ))) )
;; this enables an strange hold-hold-autorepeat on =
 b=== (tap-hold 1 180 b (macro-release-cancel S-0 500 S-0 900 S-0))
 b=  (switch
		((and (key-history lsft 6) (key-history 0 5) (key-history lsft 4) (key-history 0 3) (key-history lsft 2) (key-history 0 1) )) b break
        ((and (key-history lsft 2)(key-history 0 1))) S-0 break    
		()	@b=== break
  )
  g*  (switch
        ((and (key-history lsft 3)(key-history + 2)(key-history . 1))) S-+ break
        ((and (key-history lsft 2)(key-history + 1))) S-+ break    
		()	(tap-hold 1 160 @chf (multi (macro S-+ ) (tap-hold 1 800 XX S-+ )))  break ;; * with long autorepeat - there must be a macro (@*) after the multi for the timeout do work
  )
;;,F24 (tap-dance 140 ((tap-hold 10 100 , (multi (macro S-, ) (tap-hold 200 400 XX (macro bspc @lth ))) )  (tap-hold 10 100 f20 (macro @lth))))  ;; ,, = F24 , ; <
;; .:> (tap-dance 140 ((tap-hold 10 100 . (multi (macro S-. ) (tap-hold 200 400 XX (macro bspc @gth ))) )  (tap-hold 10 100 (macro . .) (macro @gth)) (tap-hold 10 100 (macro . . .) .) ))  ;; . : >
;;  -_~ (tap-dance 140 ((tap-hold 10 100 - (multi (macro S-- ) (tap-hold 200 400 XX (macro bspc @til ))) )  (tap-hold 10 100 (macro - -) (macro @til)) (tap-hold 10 100 (macro - - -) -) ))  ;; - _ ~
;; nesting of tap-dance inside tap-hold is now possible
  ,F20 (tap-hold  1 100 (tap-dance 140 (, (tap-hold 10 100 f20 @<)))  (multi @;  (tap-hold 200 400 XX (macro bspc 102d ))) )  ;; ,, = F24 , ; <
  ,F18 (tap-hold  1 100 (tap-dance 140 ( f18  (tap-hold 100 100 (macro , ,) @<) (macro , , ,) ))  (multi @;  (tap-hold 200 400 XX (macro bspc 102d ))) )  ;; ,, = F24 , ; <
;;,;<  (tap-hold  1 140 (tap-dance 140 (@ch, (tap-hold 10 100 (macro , ,)  @< ) (tap-hold 10 100 (macro , , ,) .) )) (multi @; (tap-hold 200 800 XX (macro bspc 102d ))) ) 
  ,;<  (tap-hold  1 140 (tap-dance 140 (
							(switch
								((and (key-history lsft 2)(key-history , 1))) S-, break
								((and (or (key-history lsft 2)(key-history rsft 2)(key-history lalt 2)(key-history ralt 2)) (key-history 102d 1))) @ch, break
								((key-history 102d 1)) @< break  
								()	@ch, break 
							)
							(tap-hold 10 100 (macro , ,)  @< )
							(tap-hold 10 100 (macro , , ,) .) ))
			(multi @; (tap-hold 200 800 XX (macro bspc 102d ))) ) 
		 
  .:>  (tap-hold  1 100 (tap-dance 140 (
							(switch
								((and (key-history lsft 2)(key-history . 1))) S-. break
								((and (or (key-history lalt 2)(key-history ralt 2)) (key-history 102d 1))) @ch. break
								((and (key-history lsft 2)(key-history 102d 1))) @> break
								((and (key-history 102d 1))) @> break
								((and (key-history - 1))) @> break
								()	@ch. break 
							)
							(tap-hold 10 100 (macro . .)  @> ) 
							(tap-hold 10 100 (macro . . .) .) )) 
			(multi @: (tap-hold 200 800 XX (macro bspc S-102d ))) )    ;; . : >
  -_~  (tap-hold  1 100 (tap-dance 140 (/   (tap-hold 10 100 (macro / /)  @~) (tap-hold 10 100 (macro / / /) /) )) (multi (macro @_ ) (tap-hold 200 800 XX (macro bspc @~~ ))) )  ;; - _ ~
  -_:  (tap-hold  1 100 (tap-dance 140 (/   (tap-hold 10 100 (macro / /)  @:) (tap-hold 10 100 (macro / / /) /) )) (multi (macro @_ ) (tap-hold 200 800 XX (macro bspc S-. ))) )  ;; - _ :
  k_~  (tap-hold  1 380 (tap-dance-eager 380 (k (tap-hold 1 300 (macro k) (macro bspc @~~)) (tap-hold 1 300 (macro k k) k) )) (multi (macro @_ ) (tap-hold 1 900 XX (macro bspc @~~ ))) )  ;; - _ ~
  K_~  (tap-hold  1 140 (tap-dance-eager 140 (S-k (tap-hold 1 100 (macro S-k) (macro bspc @~~)) (tap-hold 1 100 (macro S-k S-k) S-k) )) (multi (macro @_ ) (tap-hold 1 800 XX (macro bspc @~~ ))) )  ;; - _ ~
  ,:   (tap-hold  1 600 , @: )
  .:   (tap-hold  1 600 . @: )
)

(defvar
  hb macro h b
)

(defalias  
 ;; macros
 del2  (macro bspc rpt) 
 fashing (macro @n1 @n1 . @n1 @n1 . @n2 @n0 @n2 @n4 )
 geb (macro @n2 @n1 . @n1 @n2 . @n2 @n0 @n0 @n1 )
 iban (macro S-d  S-e  @n2 @n0 @n3 @n7 @n0 @n1 @n0 @n0 @n5 @n0 @n0 @n0 @n0 @n4 @n4 @n5 @n0 @n5 @n0 @n7 )
 plz (macro @n6 @n4 @n7 @n1 @n1 )
 tsc (macro @\\ @\\ t s c l i e n t @\\ c @\\ )
 esp (macro S-. d a t e)
 psiso (cmd-output-keys powershell.exe -NoProfile -NoLogo -NonInteractiv -Command "echo '(' ((Get-Date -Format 'yyyy-MM-dd').toCharArray() -join ' ') ')'")
 ;; **** HOW TO IMPLEMENT HOTSTRINGS **** 
 swh (switch
    ((key-history ´ 1))  (fork (macro (unicode é) f17) (macro (unicode É) f17) (lsft rsft)) break
	((key-history d 2) (key-history t 1)) (multi  bspc rpt @fashing) break
	((and (key-history j 2) (key-history u 1 ))) (macro  j spc n o t spc m a t t e r s ) break
	((and (key-history x 1) (key-history v 2 ))) (macro  x spc n o t spc m a t t e r s ) break
	((and (key-history p 1 ) lsft)) (macro  u spc n o t spc m a t t e r s ) break
	((key-history lsft 2)(key-history , 1)) (macro l s f t spc k o m m a) break
	((key-history , 1)) (macro  k o m m a) break
	((key-history < 1)) (macro  l e f t <) break
    () XX break
  )
 
 ;; Last lines  of script no leading spaces
 
cmdiso (cmd-output-keys cmd.exe /C timek.cmd) 
;;cmdiso (cmd "C:\Program Files\AutoHotkey\AutoHotkeyU64_UIA.exe" "isodate.ahk") ;; goes not work on new PC
cmdde (cmd-output-keys cmd.exe /C timedek.cmd) 
;; bash might be on windows much faster than wsl or powershell 
;;bashiso (cmd-output-keys bash -c "date +'%F %R' | sed 's/./& /g' | sed 's/:/S-;/g' | sed 's/\(.\{20\}\)\(.*\)/\(\1 spc \2\)/'")
dayiso (macro @n2 @n0 @n2 @n3 - @n0 @n3 - @n0 @n6   )
dayde  (macro @n0 @n6 . @n0 @n3 . @n2 @n0 @n2 @n3  ))